(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='WolframDesktop 13.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       161,          7]
NotebookDataLength[    293963,       6832]
NotebookOptionsPosition[    270585,       6354]
NotebookOutlinePosition[    275262,       6455]
CellTagsIndexPosition[    274946,       6443]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[{
 StyleBox[ButtonBox["Quantum counterpart of classical gates",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://community.wolfram.com/groups/-/m/t/2494463"], None},
  ButtonNote->"https://community.wolfram.com/groups/-/m/t/2494463"],
  FontWeight->"Bold"],
 "\n",
 StyleBox["by ",
  FontSlant->"Italic"],
 StyleBox[ButtonBox["Shivam Sawarn",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["https://community.wolfram.com/web/shivam185644"], None},
  ButtonNote->"https://community.wolfram.com/web/shivam185644"],
  FontSlant->"Italic"]
}], "Text",
 CellChangeTimes->{{3.8566149924115334`*^9, 3.856615053524478*^9}, {
  3.8569517456857433`*^9, 3.856951750390494*^9}, {3.8569518367718277`*^9, 
  3.856951836773019*^9}, {3.856953412876197*^9, 3.856953427145917*^9}, {
  3.8569569016304216`*^9, 3.8569569123485255`*^9}},
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],

Cell[TextData[{
 "In this computational essay, I will explore Quantum Counterpart of \
Classical Gates. I would implement some gates like NOT, AND, OR, etc. in \
classical and then quantum ways, using the ",
 ButtonBox["Wolfram Quantum Computation Framework",
  BaseStyle->"Hyperlink",
  ButtonData->{
    URL["http://wolfr.am/wolfram-quantum"], None},
  ButtonNote->"http://wolfr.am/wolfram-quantum"]
}], "Abstract",
 CellChangeTimes->{{3.856615069040234*^9, 3.856615098571546*^9}, {
  3.8566151469517193`*^9, 3.856615151544405*^9}, {3.8568747453416843`*^9, 
  3.8568749218461733`*^9}, {3.856950416359252*^9, 3.856950431071952*^9}},
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],

Cell[CellGroupData[{

Cell["Introduction", "Section",
 CellChangeTimes->{{3.856874963717001*^9, 3.856874981499422*^9}},
 CellID->623714440],

Cell["\<\
We have been studying the classical gates like AND, NOT, NAND, etc. as a \
fundamental building block for the classical computing. Quantum Computers are \
believed to be outperform the classical and this can not be achieved without \
implementing basic operations.  The quantum counterpart of subsequent \
classical gates is achieved by the Quantum gates like Pauli gates, Toffoli \
gates, etc. \
\>", "Text",
 CellChangeTimes->{{3.85687499197173*^9, 3.8568753465045958`*^9}, {
  3.856950443264566*^9, 3.856950445131262*^9}},
 CellID->1497242481]
}, Open  ]],

Cell[CellGroupData[{

Cell["NOT \[Rule] X Gate", "Section",
 CellChangeTimes->{{3.856615155386527*^9, 3.856615173156804*^9}},
 CellTags->"SectionHeader",
 CellID->453852445],

Cell["NOT operation gives complement of the state.", "Text",
 CellChangeTimes->{{3.8568753681882887`*^9, 3.8568753690047407`*^9}, {
  3.856875405063693*^9, 3.856875441727957*^9}},
 CellTags->"ExampleTopicSentence",
 CellID->816667160],

Cell["Truth table for Classical NOT operation", "CodeText",
 CellChangeTimes->{{3.856875498819625*^9, 3.856875499835889*^9}, {
  3.856875746197476*^9, 3.85687576245123*^9}},
 CellTags->"ExampleCodeText",
 CellID->66178570],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"not", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"BooleanTable", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", 
        RowBox[{"Not", "[", "a", "]"}]}], "}"}], ",", 
      RowBox[{"{", "a", "}"}]}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Text", "@", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{"not", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<A\>\"", ",", "\"\<A'\>\""}], "}"}]}], "]"}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Yellow", ",", ".9"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"White", ",", 
           RowBox[{"Lighter", "[", 
            RowBox[{
             RowBox[{"Blend", "[", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], 
            "]"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Alignment", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Center", ",", 
        RowBox[{"{", "Center", "}"}]}], "}"}], "}"}]}], ",", 
    RowBox[{"ItemSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"5", ",", "5"}], "}"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"ItemStyle", "\[Rule]", "14"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.856615190212592*^9, {3.856875507840415*^9, 3.856875516789075*^9}, {
   3.8568755552677526`*^9, 3.856875633638007*^9}, {3.856877243595764*^9, 
   3.856877254263317*^9}, {3.856877306506444*^9, 3.8568773148569107`*^9}, {
   3.856881474533964*^9, 3.856881535262691*^9}},
 CellTags->"ExampleInput",
 CellLabel->"In[5]:=",
 CellID->844129532],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    TagBox[GridBox[{
       {"\<\"A\"\>", "\<\"A'\"\>"},
       {"1", "0"},
       {"0", "1"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {Center, Center, {Center}}},
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
          RGBColor[1., 1., 0.9], {
           GrayLevel[1], 
           RGBColor[0.8, 0.9, 0.9]}}},
      GridBoxDividers->{"Columns" -> {
          RGBColor[0.2, 0.2, 0.2], {
           RGBColor[0.75, 0.75, 0.75]}, 
          RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
          RGBColor[0.2, 0.2, 0.2], 
          RGBColor[0.2, 0.2, 0.2], {False}, 
          RGBColor[0.2, 0.2, 0.2]}},
      GridBoxFrame->{
       "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> RGBColor[0.2, 0.2, 0.2]}},
      GridBoxItemSize->{"Columns" -> {5, 5}},
      GridBoxItemStyle->{"Columns" -> {{14}}, "Rows" -> {{14}}}],
     "Grid"], TextForm]], "InlineText"],
  Text[
   Grid[{{"A", "A'"}, {1, 0}, {0, 1}}, Background -> {None, {
       RGBColor[1., 1., 0.9], {
        GrayLevel[1], 
        RGBColor[0.8, 0.9, 0.9]}}}, Dividers -> {{
       RGBColor[0.2, 0.2, 0.2], {
        RGBColor[0.75, 0.75, 0.75]}, 
       RGBColor[0.2, 0.2, 0.2]}, {
       RGBColor[0.2, 0.2, 0.2], 
       RGBColor[0.2, 0.2, 0.2], {False}, 
       RGBColor[0.2, 0.2, 0.2]}}, Alignment -> {{Center, Center, {Center}}}, 
    ItemSize -> {{5, 5}}, Frame -> RGBColor[0.2, 0.2, 0.2], ItemStyle -> 
    14]]]], "Output",
 CellChangeTimes->{
  3.856615205376133*^9, 3.856787727029282*^9, 3.856874453443851*^9, {
   3.8568755885460663`*^9, 3.856875602396435*^9}, 3.856875634206196*^9, 
   3.856877254711335*^9, {3.8568773091625967`*^9, 3.856877316545113*^9}, 
   3.856881540662539*^9, 3.8569045802078*^9, 3.856905159383897*^9},
 CellTags->"ExampleInput",
 CellLabel->"Out[6]=",
 CellID->1735815612]
}, Open  ]],

Cell["\<\
Quantum circuit is defined independently using the 'PauliX' gate and then \
visualized.\
\>", "CodeText",
 CellChangeTimes->{{3.856875785203863*^9, 3.85687585670984*^9}, {
  3.856875894046957*^9, 3.856875900886298*^9}, {3.856878408494561*^9, 
  3.8568784317132473`*^9}},
 CellID->1516637261],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qNOT", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"QuantumOperator", "[", "\"\<PauliX\>\"", "]"}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"qNOT", "[", 
  RowBox[{"\"\<Diagram\>\"", ",", 
   RowBox[{"\"\<WireLabels\>\"", "->", 
    RowBox[{"{", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Placed", "[", 
        RowBox[{"\"\<A\>\"", ",", "Left"}], "]"}], ",", 
       RowBox[{"Placed", "[", 
        RowBox[{"\"\<A'\>\"", ",", "Right"}], "]"}]}], "}"}], "}"}]}]}], 
  "]"}]}], "Input",
 CellChangeTimes->{{3.8566155473953867`*^9, 3.8566155868716097`*^9}, {
  3.856875831292097*^9, 3.856875834330328*^9}},
 CellLabel->"In[7]:=",
 CellID->954032184],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztm01II0kUx+P3RtFEvChE4vh1UJERDKwQooKIHhSZdcFDFGfY7LA5uGpE
2YPgwZPCHgQVEfWiCHry42LwA1Hw4EFFZA/qouDFHBRU0MRoz5upJWQ10U76
9bpveD9Qkq5O1b+6fqmu7tZ3n37/8GukRqNx/AC/PnzsKm9v//jHT3p483OL
47fPLbZfqls6bJ9t7T9+ioKNJfBzCT9fX0sMwzAMwzAMw9BHQ5y3Pn7M/wjS
PpAOz6BD2gfS4Rl0SPtAOjyDDmkfSIdn0CHtA+nwDDqkfSAdnkGHtA+kwzPo
kPaBdHgGHdI+kA7PoEPaB9LhGXRI+0A6PIMOaR9Ih/8+GB0d9Xg8b53iH1B8
OD8//+sZx8fHotTr9T4pOj09Vd6oxDIr5mUVl5aWpqenX/j49vY2DMHU1JQK
0cIBxYehoSG9Xu//x2wFBQVtbW2i1OVyNTU1abVaUZSdnd3Z2am8UYllVsar
KqalpcEOl5eXwXaAYYUdTCaTOgFDBsuHu7s7UNQn8/r6+pMd6urqYHtHR8fD
wwNKixLLrIxXVUxPT4cdrq+vA5bCHBUXFyeGe3NzU7WYIYDrQ319vehdbW2t
/3an0xkREWG32xHbklhmBchR0Ww263S6YDX09vbGxsZGRn79D1kYd9WShgCu
D3BKMhqN4hBNTEyIjbB4TklJqayshMUzYlsSy6wAOSparVZYLgYsur+/NxgM
cJ4V01dUVNTJyYmaeWWB7sPGxoY4RElJSdDBq6urvLw8WCdfXFzgNiSxzOEi
U8Xu7u6qqqqANczOzsKpFqaptbU1MXc5HA6VU7+OGj50dXWJDsJ5qrq6OjEx
8eDgAL0ViWUOF5kqjo+P22y2gDVYLBYYWfE6Pz8faoAFSbDV9X+GGj643e7C
wkLfxeDc3Bx6EwKWOTxkqrizsxPwXsfe3h58ZGFhQbwdHh4WAz0wMKBq7FdR
yQfoLyzJoHJYcsAxUaMJiWUOC+UqwnSdkZHhuysF3wJYUoqbroi3qsJAJR9A
YCEzAGvm29tbNVphmcNAoYpw7RMfH28ymf70Izc3V+ZZ+Ozs7G/VUMMHl8tl
NBrhQhi6LPrY2tqK3or0TWb1jgx1Hh8fnx8xhSoC/f39ME29/ze+VWV5efnL
H6+oqHinGugyezye0tJSvV5/eHh4dHSUkJAATcDlxvLyMm5D0jeZ1Tsy1Al4
NlSootfrhVm9sbHxeZFv4trd3cUZ3dBBl9lut4O6i4uL4u3g4KDoo8FgeOHB
aHjwMiMklKs4MzMT8PEuMDk5KWpobm5GSxwiuD6MjIxAhT09Pb4tcLKD77vo
ZkNDA2JbEsscIgpVhKEsLi7OzMwMWOp2u5OTk6EGmPlhYYwWOhQQfVhZWYmJ
iYFF0ZPrCFhsREdHP3ksiALLLB+FKsKs3tfXBzsUFRUFa6KkpESMstVqRX/a
KwcsH1ZXV3U6HdQ2Njb2vNRisYhugu3z8/MoLUoss2yUq1hTU+N7cJCTk7O/
v+9furW1BVeRsLz07ZOamnpzc6NKZ4KD4oPZbPb1QqvVlpWV+YqcTif03b+b
QFZWFso3l2WWCQkVlUPaB9LhGXRI+0A6PIMOaR9Ih2fQIe0D6fAMOqR9IB2e
QYe0D6TDM+iQ9oF0eAYd0j6QDs+gQ9oH0uEZdEj7QDo8gw5pH0iHZ9Ah7QPp
8Aw6pH0gHZ5Bh7QPpMMz6JD2gXR4Bh3SPpAOz6BD2gfS4Rl0NMR56+PHMAzD
MAzDMAzDMN8VXwApHfkG
    "], {{0, 57.}, {239., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{239., 57.},
  PlotRange->{{0, 239.}, {0, 57.}}]], "Output",
 CellChangeTimes->{
  3.856615258491686*^9, 3.856615329483966*^9, {3.856615576861215*^9, 
   3.856615587459152*^9}, 3.856787729254451*^9, 3.856874456545845*^9, 
   3.8568758361144733`*^9, 3.856904580530115*^9, 3.8569051654032373`*^9},
 CellLabel->"Out[8]=",
 CellID->1448491957]
}, Open  ]],

Cell["Choose both 0 and 1 as input and measure the output.", "CodeText",
 CellChangeTimes->{{3.856876150506003*^9, 3.856876267600849*^9}},
 CellID->1034899575],

Cell[BoxData[{
 RowBox[{
  RowBox[{"input", "=", 
   RowBox[{"QuantumState", "/@", 
    RowBox[{"{", 
     RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}]}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"output", "=", 
   RowBox[{"qNOT", "/@", "input"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.856615348316711*^9, 3.856615359125457*^9}},
 CellLabel->"In[9]:=",
 CellID->1953541672],

Cell["Arrange input and output of Quantum Circuit using TableForm.", \
"CodeText",
 CellChangeTimes->{{3.8568762952035923`*^9, 3.856876341325678*^9}, {
  3.856876678970861*^9, 3.856876691738441*^9}},
 CellID->718620660],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TableForm", "[", 
  RowBox[{
   RowBox[{"Transpose", "[", 
    RowBox[{"MapAt", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"#", "[", "\"\<Formula\>\"", "]"}], "&"}], ",", 
      RowBox[{"{", 
       RowBox[{"input", ",", "output"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"All", ",", "All"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"TableHeadings", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<A\>\"", ",", " ", "\"\<A'\>\""}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.856874415354053*^9, 3.856874428227356*^9}, {
  3.856876064433763*^9, 3.856876085614419*^9}, {3.856909177367507*^9, 
  3.8569091803964443`*^9}},
 CellLabel->"In[70]:=",
 CellID->468678722],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      TagBox["\<\"A\"\>",
       HoldForm], 
      TagBox["\<\"A'\"\>",
       HoldForm]},
     {
      InterpretationBox[
       TemplateBox[{
         RowBox[{"0"}]},
        "Ket"],
       Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], 
      InterpretationBox[
       TemplateBox[{
         RowBox[{"1"}]},
        "Ket"],
       Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]},
     {
      InterpretationBox[
       TemplateBox[{
         RowBox[{"1"}]},
        "Ket"],
       Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], 
      InterpretationBox[
       TemplateBox[{
         RowBox[{"0"}]},
        "Ket"],
       Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}},
    GridBoxDividers->{
     "Columns" -> {{False}}, "Rows" -> {False, True, {False}, False}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[2.0999999999999996`]}, 
        Offset[0.27999999999999997`]}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}}],
   {None, OutputFormsDump`HeadedColumns}],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$, TableHeadings -> {None, {"A", "A'"}}]]]], "Output",
 CellChangeTimes->{
  3.856615372222415*^9, 3.856787729520249*^9, 3.856874430811105*^9, 
   3.856874472823749*^9, {3.856876077172855*^9, 3.856876092249634*^9}, 
   3.856904580566452*^9, 3.856905165732067*^9, 3.8569091809447403`*^9},
 CellLabel->"Out[70]//TableForm=",
 CellID->748285312]
}, Open  ]],

Cell["\<\
Truth table of both classical and quantum version of NOT gate are same. The \
Quantum Counterpart of NOT gate is PauliX/NOT gate. \
\>", "Text",
 CellChangeTimes->{{3.8568763692774982`*^9, 3.856876457931046*^9}},
 CellID->658266674]
}, Open  ]],

Cell[CellGroupData[{

Cell["AND \[Rule] Toffoli Gate", "Section",
 CellChangeTimes->{{3.856615155386527*^9, 3.856615173156804*^9}, {
  3.856615428866654*^9, 3.856615440904059*^9}},
 CellTags->"SectionHeader",
 CellID->1693717104],

Cell["\<\
An AND gate operates on logical multiplication rules . In this gate, if \
either of the inputs is low and high, then the output is also low and high \
respectively.\
\>", "Text",
 CellChangeTimes->{{3.856876775609803*^9, 3.8568768419234123`*^9}, 
   3.856877190154193*^9},
 CellID->1915562970],

Cell["Truth table of classical AND operation.", "CodeText",
 CellChangeTimes->{{3.8568771997709093`*^9, 3.8568772049875402`*^9}, {
  3.856878363910568*^9, 3.856878379439872*^9}},
 CellID->431849719],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"and", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"BooleanTable", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", 
        RowBox[{"And", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Text", "@", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{"and", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<AB\>\""}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Yellow", ",", ".9"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"White", ",", 
           RowBox[{"Lighter", "[", 
            RowBox[{
             RowBox[{"Blend", "[", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], 
            "]"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Alignment", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Center", ",", 
        RowBox[{"{", "Center", "}"}]}], "}"}], "}"}]}], ",", 
    RowBox[{"ItemSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"5", ",", "5", ",", "5"}], "}"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"ItemStyle", "\[Rule]", "14"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8568691312568207`*^9, 3.856869174800956*^9}, {
  3.856881427960455*^9, 3.85688144455518*^9}},
 CellLabel->"In[12]:=",
 CellID->1847574853],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    TagBox[GridBox[{
       {"\<\"A\"\>", "\<\"B\"\>", "\<\"AB\"\>"},
       {"1", "1", "1"},
       {"1", "0", "0"},
       {"0", "1", "0"},
       {"0", "0", "0"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {Center, Center, {Center}}},
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
          RGBColor[1., 1., 0.9], {
           GrayLevel[1], 
           RGBColor[0.8, 0.9, 0.9]}}},
      GridBoxDividers->{"Columns" -> {
          RGBColor[0.2, 0.2, 0.2], {
           RGBColor[0.75, 0.75, 0.75]}, 
          RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
          RGBColor[0.2, 0.2, 0.2], 
          RGBColor[0.2, 0.2, 0.2], {False}, 
          RGBColor[0.2, 0.2, 0.2]}},
      GridBoxFrame->{
       "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> RGBColor[0.2, 0.2, 0.2]}},
      GridBoxItemSize->{"Columns" -> {5, 5, 5}},
      GridBoxItemStyle->{"Columns" -> {{14}}, "Rows" -> {{14}}}],
     "Grid"], TextForm]], "InlineText"],
  Text[
   Grid[{{"A", "B", "AB"}, {1, 1, 1}, {1, 0, 0}, {0, 1, 0}, {0, 0, 0}}, 
    Background -> {None, {
       RGBColor[1., 1., 0.9], {
        GrayLevel[1], 
        RGBColor[0.8, 0.9, 0.9]}}}, Dividers -> {{
       RGBColor[0.2, 0.2, 0.2], {
        RGBColor[0.75, 0.75, 0.75]}, 
       RGBColor[0.2, 0.2, 0.2]}, {
       RGBColor[0.2, 0.2, 0.2], 
       RGBColor[0.2, 0.2, 0.2], {False}, 
       RGBColor[0.2, 0.2, 0.2]}}, Alignment -> {{Center, Center, {Center}}}, 
    ItemSize -> {{5, 5, 5}}, Frame -> RGBColor[0.2, 0.2, 0.2], ItemStyle -> 
    14]]]], "Output",
 CellChangeTimes->{{3.856869158373537*^9, 3.85686917571425*^9}, 
   3.856881445888607*^9, 3.856904580595314*^9, 3.856905165762833*^9},
 CellLabel->"Out[13]=",
 CellID->941849523]
}, Open  ]],

Cell["Define circuit operator", "CodeText",
 CellChangeTimes->{{3.856828696293359*^9, 3.856828704903023*^9}},
 CellID->230718633],

Cell[BoxData[
 RowBox[{
  RowBox[{"qAND", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"QuantumOperator", "[", "\"\<Toffoli\>\"", "]"}], "}"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
   3.856828409274955*^9, 3.856828411811714*^9}, 3.85682848669272*^9},
 CellLabel->"In[14]:=",
 CellID->1480081996],

Cell["Visualize it", "CodeText",
 CellChangeTimes->{{3.856828707126808*^9, 3.85682871588899*^9}},
 CellID->1435023571],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qAND", "[", 
  RowBox[{"\"\<Diagram\>\"", ",", 
   RowBox[{"\"\<WireLabels\>\"", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<A\>\"", ",", "Left"}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<A\>\"", ",", "Right"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<B\>\"", ",", "Left"}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<B\>\"", ",", "Right"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{
         "\"\<\!\(\*TemplateBox[{\"0\"},\"Ket\"]\)\>\"", ",", "Left"}], "]"}],
         ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<AB\>\"", ",", "Right"}], "]"}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.856828616538381*^9, 3.856828678581092*^9}, {
  3.8568796330334682`*^9, 3.8568796646367197`*^9}},
 CellLabel->"In[15]:=",
 CellID->52318340],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnA1QVOUagPn/NUEUpEAEE2TESEAoTSGMAQwovHZHVP4EQa+oN5CQrCYF
GR1EEzNTCQon1DDHEEGQAUQaQzEhGBONRQ2BxAElFh1A8L753Xtm79kfYPfs
no/tfWZ0lvd85+U93z77/Zw9ahf173/EamloaGw2gL/+sXqLd0LC6g+XmcIP
/9y0+V9rN8WsWbIpMWZtTMLrUdoQPAl/foc/f71+hiBqQVZW1sDAAN9VIOOe
hoaG6upqZWSura2FITcvL08ZyZG/FQEBAbNmzRoeHuY8c3h4OFjq7u7OeWbk
b0Vzc7Ompia4VFRUxG3mzs5OfX19jef8+OOP3CZH/lbEx8cTkXx8fLjNvGPH
Dj09PS2tv7Zm7733HrfJVU9TU1N0dLSlpSVclKGhoZ2dXWJiYltbG991qT9C
odDU1NTAwICI2tjYyFXmwcFBa2treB/Bz7/uCGhr37lzh6vkqgc+y9BLcBUa
IsBMYWRklJOTw3d1as6hQ4eg8y9cuEC6HcYKrjKfPHkSFhICgaCyspIk37x5
M1fJVcyyZcs0pAPqHjlyhO8a1RknJyfY4MALLy8v6HAw9sGDB5xk9vT0XLJk
CfNbILmJiUlvby8nyVVJRkaGsbGxDEsJ8Ennu1L1pKKiArr38uXLz54PfaS3
U1NTFc/8yy+/QKrCwkLy45dffkmS79+/X/HkqqSvr2/ixIkjKgq4urryXax6
snTpUjc3N/IalpFWVlbQ27A76O/vVzBzTEyMra3t0NAQ+RGGUPJez5w5kwmO
C4qLi0dpKWypOjo6+K5X3bh79y4sqLKzs5lISkoK6fCjR48qkrm7uxv2FO7u
7ntFcHBwIMkLCgoUrl11bNu2jdyjGBHYhDJzB8IVycnJ0LdpaWmMSElJSZxM
Xrt374aBZe7/4+zsTJJ7e3tLO3Hr1q2j8QFRP6qqqsR9ePLkyZQpU2xsbFgu
WVhYyDhrNDx9+hTm+rCwMPFDMLqS5PX19fIlVz04lvIITPSamprNzc2seFFR
Eenz4OBg+TLn5+dLk/zbb78lySMjI+VLrnpwXcoXw8PDTk5OEmdeOGRvbw99
DgOIQCCQI/O8efNmzJgh8ShsyiZNmkTe0Hv37o25bj7APT5fwMQEvZqbmyvx
aHp6Oun2uLi4MaWFuZ6c6+LiIq3N/PnzSfLQ0FBoP7a6eSIjI2NERWG3iPdL
OaSlpcXR0VFD+l67tLSU9Ly+vv6YFpBBQUHMuwYDMuvL1p9++gm2+eSxFoKl
paVQKFToYlQFXJqurq4MSzMzM/muUX2oqalhetvY2HjDhg2sBrBiNDExYTof
5n0YHnkplSpgJSPte3zoxu+//57vAhHkvzQ1Na1ZswamAPjwwofdzs7ugw8+
wGeiEDqJjY09fPgw31UgiCzQUoR+0FKEftBShH7QUoR+0FKEftBShH7QUoR+
0FKEftBShH7QUoR+0FKEftBShH7QUoR+0FKEftBShH7QUoR+0FKEftBShH7Q
UoR+0FKEftBShH7QUoR+0FKEftBShH7QUoR+0FKEftBShH7QUoR+0FKEftBS
hH7QUoR+0FKEftBShH7QUoR+0FKEftBShH7QUoR+0FKEftBShH7QUoR+0FKE
ftBShH7QUoR+0FKEftBShH7QUoR+0FKEftBShH7QUoR+0NLxS39//w1JtLS0
DAwM8F0dl6ClyqatrU1cJIFA0Nvbq2BmSLJ8+XJzc3MNMYyNjf39/Xfv3n37
9m0uLoJn0FJls2fPnoULF4qLRFwKDAw8fvy4IvnBQ5Jt2rRpXV1dDx8+vH79
enp6ur6+PgTB4cbGRq6uhS/QUtUQERFBXNq3b59QKOzo6CgpKfH09CTB9evX
Dw8Py538hRdegCTz5s0TDVZVVZHkvr6+CpfPJ0NDQ5GRkQcOHOC7EPUHRlTi
zNmzZ5kgrB79/PxI/NKlS3InnzJlirilgJ2dHcRNTEwU+QjwSHV1NXzEDAwM
tLS0NDU14cMYEhKiBlMDtcBQIG4pkJubS+KgsdzJpVnq5uZGko/HzdQ777wD
frLWSNra2kZGRikpKXxXp55Is7SwsJDEU1NT5U4u0VLY6evo6EA8ODhY7sy8
AFM8rOR1dXUlLuYBOJScnMx3mWqINEujoqJI/Pz583InJ5a6uLg8fvy4p6en
rq7uyJEjFhYWEDQzM2ttbVW4fJXy8ccfw75SmqIMZ86c4btSdYOx9NSpU7B7
amtrKy4uDg0NJcF169YpkpxYKs6CBQs6Ozu5ugTV8OjRI5jTR1QUcHBw4LtY
dYOxVBzQVcHkxFJ7e/tr164dO3Zs8+bNb775JhmO4K3My8vj5BJUw+nTpydO
nDgaS2HV+vvvv/Ndr1rBWLp3797KysqMjIwVK1aAVxrPV1kRERHt7e1yJ5e4
Lr1165a1tTX5pQUFBRJP/PPPP9spIz4+fjSKArDl//rrr/mud7zS398vw1LW
unTLli0k7uHhMTg4yKGlQGZmJkkeFBQk8cRdu3a9SBmGhoajtFRTU9PExITv
escrNTU1o7cUgA0OOfTzzz9za2l5eTnJPHv2bPkyq55t27Zpa2uPxlJTU9PC
wkK+61UrZFi6aNEicgg2VvIll2ZpTk4Oyezv7y9fZtVTUVFBvkobET09va6u
Lr7rVStkWGpjY0MOwcZfvuRkU+zm5iYa7O3tdXV1JZmzsrLkrFvlDAwMSLtl
IYqWlpanpyffxaob6enppHtZkxRswEl8zpw58mWura1lxpbS0tIrV67AniI6
OtrW1pbEY2Njh4aGuLgIFfHNN9+MaCl8MK9evcp3pWoFSAL7F9K9sLWvr68/
d+7c9u3bfX19yTcssG68cePGWNPCKS4uLuQLJhawPH7rrbc2btxYVlamjCtS
NgkJCbIt/eGHH/iuUa1ITEy0tLQU72cDAwNnZ+eQkJCdO3cKhUK+y6SOjIwM
g+eIdtqECRNg03Tx4kW+q0OQ/3L//v2UlJS5c+eSh0zeeOONzz//vKenh++6
EEQCjo6Oq1at4rsKBJEFWorQD1qK0A9aitAPWorQD1qK0A9aitAPWorQD1qK
0A9aitAPWorQD1qK0A9aitAPWorQD1qK0A9aitAPWorQD1qK0A9aitAPWorQ
D1qK0A9aitAPWorQD1qK0A9aitAPWorQD1qK0A9aitAPWorQD1qK0A9aitAP
WorQD1qK0A9aitAPWorQD1qK0A9aitAPWorQD1qK0A9aitAPWorQD1qK0A9a
itAPWorQD1o6Hjl27FhUVBTfVagOtHQ88umnn9rY2PBdhepAS8cjY7XUz8/v
8OHDyqtH2aCl45GxWvr222+/9tpryqtH2aCl45GxWrpv3z5NTc2Ojg7llaRU
0NLxyFgt/fXXXzU0NLKyspRXkpJoaWkpKiqaPHmyi4tLeXl5Z2cn3xUho0Wi
pW1tbfn5+VeuXBkeHhY/xdraOigoSCXVcUB3d3dycrKtre20adOWLFmiq6tr
Zmbm7e0Nf4OuMDX09/fzXaP60NDQUF1dLe0oeHVDDIFA0NvbKzsty9KrV6++
+uqrlpaWYWFh8D5OnTo1JyeHdUpUVJShoeHjx48VuRwVAB+xtLQ0GDw3bdp0
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
    
    "], {{0, 171.}, {226., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{226., 171.},
  PlotRange->{{0, 226.}, {0, 171.}}]], "Output",
 CellChangeTimes->{
  3.856828624621269*^9, 3.856828678969043*^9, 3.856828957763734*^9, 
   3.8568463896167583`*^9, {3.856879647170179*^9, 3.856879665562154*^9}, 
   3.8568799229248533`*^9, 3.8569045806293488`*^9, 3.8569051659976377`*^9},
 CellLabel->"Out[15]=",
 CellID->929698907]
}, Open  ]],

Cell["All combinations of A and B, with setting 3rd qubit as 0", "CodeText",
 CellChangeTimes->{{3.8568287476961823`*^9, 3.856828759869239*^9}},
 CellID->1552463474],

Cell[BoxData[
 RowBox[{
  RowBox[{"states", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"QuantumState", "[", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"#", ",", "\"\<0\>\""}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}], ",", "2"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
  3.856828409274955*^9, 3.856828411811714*^9}, {3.85682848669272*^9, 
  3.856828491126009*^9}},
 CellLabel->"In[16]:=",
 CellID->327296468],

Cell["Formulas of states (only for illustration purposes)", "CodeText",
 CellChangeTimes->{{3.856828769384801*^9, 3.856828788702155*^9}, {
  3.856905195393281*^9, 3.856905199936821*^9}},
 CellID->1166117709],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", "\"\<Formula\>\"", "]"}], "&"}], "/@", 
  "states"}]], "Input",
 CellChangeTimes->{{3.856828494965972*^9, 3.856828501940291*^9}},
 CellLabel->"In[17]:=",
 CellID->1004572641],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> False]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.856828502542555*^9, 3.8568289578213787`*^9, 
  3.856846389711813*^9, 3.856904580658689*^9, 3.856905166114739*^9},
 CellLabel->"Out[17]=",
 CellID->613435915]
}, Open  ]],

Cell["Measure 3rd qubit (which will be AB)", "CodeText",
 CellChangeTimes->{{3.8568287927481003`*^9, 3.856828808226709*^9}, {
  3.856878511055356*^9, 3.8568785127403603`*^9}},
 CellID->485930448],

Cell[BoxData[
 RowBox[{
  RowBox[{"final", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"QuantumMeasurementOperator", "[", 
      RowBox[{"{", "3", "}"}], "]"}], "[", "qAND", "]"}], "/@", "states"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
   3.856828409274955*^9, 3.856828411811714*^9}, {3.85682848669272*^9, 
   3.856828507064117*^9}, 3.8568785302005663`*^9},
 CellLabel->"In[18]:=",
 CellID->152729995],

Cell["\<\
Delete cases with repetitive 0 probabilities and keep unique keys\
\>", "CodeText",
 CellChangeTimes->{{3.856828810793725*^9, 3.85682887225996*^9}, {
  3.85687857796329*^9, 3.856878630234427*^9}},
 CellID->1557820800],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"results", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Keys", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"#", "[", "\"\<Probabilities\>\"", "]"}], ",", "0"}], "]"}], 
      "]"}], "&"}], "/@", "final"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
  3.856828409274955*^9, 3.856828411811714*^9}, {3.85682848669272*^9, 
  3.856828505792939*^9}},
 CellLabel->"In[19]:=",
 CellID->173561376],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.856828301204431*^9, 3.856828958060594*^9, 
  3.856846395821104*^9, 3.8569045808279657`*^9, 3.8569051677362423`*^9},
 CellLabel->"Out[19]=",
 CellID->2095917805]
}, Open  ]],

Cell["Visualize the quantum version of AND truth table.", "CodeText",
 CellChangeTimes->{{3.856828938597994*^9, 3.856828945468927*^9}, {
  3.856869306944278*^9, 3.856869307245216*^9}, {3.856878648136992*^9, 
  3.8568786675035353`*^9}},
 CellID->575522684],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"QuantumState", "[", "#", "]"}], "[", "\"\<Formula\>\"", 
           "]"}], "&"}], "/@", 
         RowBox[{"StringJoin", "@@@", 
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}], ",", "2"}], 
           "]"}]}]}], ",", "results"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<\!\(\*TemplateBox[{
RowBox[{\"A\", \",\", \"B\"}]},\"Ket\"]\)\>\"", ",", 
       "\"\<\!\(\*TemplateBox[{\"AB\"},\"Ket\"]\)\>\""}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"LightRed", ",", "LightBlue"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.856828400023141*^9, 3.8568284612675133`*^9}, {
   3.856828549164446*^9, 3.8568285525052633`*^9}, {3.856828597606731*^9, 
   3.856828601935616*^9}, 3.856846541640149*^9, 3.856846584418779*^9, 
   3.8568468241741*^9, {3.8568693204619007`*^9, 3.856869321188118*^9}, {
   3.8568743620640507`*^9, 3.856874373310113*^9}, {3.85690915946887*^9, 
   3.856909159836356*^9}},
 CellLabel->"In[69]:=",
 CellID->543403900],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*TemplateBox[{RowBox[{\\\"A\\\", \\\",\\\", \\\"B\\\"}]},\\\
\"Ket\\\"]\\)\"\>", \
"\<\"\\!\\(\\*TemplateBox[{\\\"AB\\\"},\\\"Ket\\\"]\\)\"\>"},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
        RGBColor[1, 0.85, 0.85], 
        RGBColor[0.87, 0.94, 1]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8568284616468563`*^9, 3.856828602354045*^9, 
  3.8568289581778183`*^9, 3.856846395961659*^9, 3.856846595113328*^9, 
  3.8568468344852867`*^9, 3.8568743743470592`*^9, 3.856904580845343*^9, 
  3.8569051678330593`*^9, 3.85690916052372*^9},
 CellLabel->"Out[69]=",
 CellID->1571123038]
}, Open  ]],

Cell["\<\
The third qubit initialized at 0 is chosen as the output and is similar to \
the classical counterpart.\
\>", "Text",
 CellChangeTimes->{{3.856878700926296*^9, 3.856878782182806*^9}},
 CellID->1217158812]
}, Open  ]],

Cell[CellGroupData[{

Cell["OR \[Rule] anti-Toffoli Gate", "Section",
 CellChangeTimes->{{3.856615155386527*^9, 3.856615173156804*^9}, {
  3.856615428866654*^9, 3.856615440904059*^9}, {3.8568716484381733`*^9, 
  3.856871654185068*^9}, {3.856873630299264*^9, 3.856873630764991*^9}},
 CellTags->"SectionHeader",
 CellID->1127494243],

Cell["\<\
The Logic OR Gate output goes HIGH only when one or more of its inputs are \
HIGH.\
\>", "Text",
 CellChangeTimes->{{3.8568791125843887`*^9, 3.8568791564202423`*^9}},
 CellID->1563734128],

Cell["Truth table of classical OR gate.", "CodeText",
 CellChangeTimes->{{3.856879175485166*^9, 3.856879195894101*^9}},
 CellID->1791965260],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"or", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"BooleanTable", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", 
        RowBox[{"Or", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Text", "@", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{"or", ",", 
      RowBox[{"{", 
       RowBox[{"\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<A+B\>\""}], "}"}]}], 
     "]"}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Yellow", ",", ".9"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"White", ",", 
           RowBox[{"Lighter", "[", 
            RowBox[{
             RowBox[{"Blend", "[", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], 
            "]"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Alignment", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Center", ",", 
        RowBox[{"{", "Center", "}"}]}], "}"}], "}"}]}], ",", 
    RowBox[{"ItemSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"5", ",", "5", ",", "5"}], "}"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"ItemStyle", "\[Rule]", "14"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8568691312568207`*^9, 3.856869174800956*^9}, {
  3.85687166186838*^9, 3.8568716637265472`*^9}, {3.8568808890742903`*^9, 
  3.856880900637685*^9}, {3.856881324612113*^9, 3.8568814054179773`*^9}},
 CellLabel->"In[21]:=",
 CellID->400040973],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    TagBox[GridBox[{
       {"\<\"A\"\>", "\<\"B\"\>", "\<\"A+B\"\>"},
       {"1", "1", "1"},
       {"1", "0", "1"},
       {"0", "1", "1"},
       {"0", "0", "0"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {Center, Center, {Center}}},
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
          RGBColor[1., 1., 0.9], {
           GrayLevel[1], 
           RGBColor[0.8, 0.9, 0.9]}}},
      GridBoxDividers->{"Columns" -> {
          RGBColor[0.2, 0.2, 0.2], {
           RGBColor[0.75, 0.75, 0.75]}, 
          RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
          RGBColor[0.2, 0.2, 0.2], 
          RGBColor[0.2, 0.2, 0.2], {False}, 
          RGBColor[0.2, 0.2, 0.2]}},
      GridBoxFrame->{
       "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> RGBColor[0.2, 0.2, 0.2]}},
      GridBoxItemSize->{"Columns" -> {5, 5, 5}},
      GridBoxItemStyle->{"Columns" -> {{14}}, "Rows" -> {{14}}}],
     "Grid"], TextForm]], "InlineText"],
  Text[
   Grid[{{"A", "B", "A+B"}, {1, 1, 1}, {1, 0, 1}, {0, 1, 1}, {0, 0, 0}}, 
    Background -> {None, {
       RGBColor[1., 1., 0.9], {
        GrayLevel[1], 
        RGBColor[0.8, 0.9, 0.9]}}}, Dividers -> {{
       RGBColor[0.2, 0.2, 0.2], {
        RGBColor[0.75, 0.75, 0.75]}, 
       RGBColor[0.2, 0.2, 0.2]}, {
       RGBColor[0.2, 0.2, 0.2], 
       RGBColor[0.2, 0.2, 0.2], {False}, 
       RGBColor[0.2, 0.2, 0.2]}}, Alignment -> {{Center, Center, {Center}}}, 
    ItemSize -> {{5, 5, 5}}, Frame -> RGBColor[0.2, 0.2, 0.2], ItemStyle -> 
    14]]]], "Output",
 CellChangeTimes->{{3.856869158373537*^9, 3.85686917571425*^9}, 
   3.8568716676742887`*^9, {3.856880891763983*^9, 3.856880901748809*^9}, {
   3.8568813772391033`*^9, 3.8568814060016203`*^9}, 3.856904580881001*^9, 
   3.856905167870634*^9},
 CellLabel->"Out[22]=",
 CellID->428594821]
}, Open  ]],

Cell["\<\
Quantum counterpart of OR gate is an anti-Toffoli gate having third qubit \
initialized at '1'.\
\>", "Text",
 CellChangeTimes->{{3.856828696293359*^9, 3.856828704903023*^9}, {
  3.8568792211102324`*^9, 3.8568792907523413`*^9}},
 CellID->1621479189],

Cell["Define the circuit along with the Measurement operator.", "CodeText",
 CellChangeTimes->{{3.856879300747903*^9, 3.856879322539007*^9}, {
  3.856880353316832*^9, 3.8568803724134493`*^9}},
 CellID->834006490],

Cell[BoxData[
 RowBox[{
  RowBox[{"qOR", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"\"\<Controlled0\>\"", ",", "\"\<NOT\>\"", ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], ",", 
      RowBox[{"QuantumMeasurementOperator", "[", 
       RowBox[{"{", "3", "}"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
   3.856828409274955*^9, 3.856828411811714*^9}, 3.85682848669272*^9, {
   3.85687195807465*^9, 3.856871975412807*^9}, 3.85687209739187*^9, {
   3.85687213887805*^9, 3.856872152739169*^9}, {3.856872538957614*^9, 
   3.856872540488861*^9}, 3.85688030306301*^9},
 CellLabel->"In[23]:=",
 CellID->633249093],

Cell["\<\
Visualize it. The right hand side of third qubit is the desired OR gate \
output 'A+B'.\
\>", "CodeText",
 CellChangeTimes->{{3.856828707126808*^9, 3.85682871588899*^9}, {
  3.856879091900477*^9, 3.856879095561966*^9}, {3.856879331102662*^9, 
  3.856879371865971*^9}, {3.8568801956136436`*^9, 3.856880200084137*^9}},
 CellID->88551519],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qOR", "[", 
  RowBox[{"\"\<Diagram\>\"", ",", 
   RowBox[{"\"\<WireLabels\>\"", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<A\>\"", ",", "Left"}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<A\>\"", ",", "Right"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<B\>\"", ",", "Left"}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<B\>\"", ",", "Right"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{
         "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", "Left"}], "]"}],
         ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<A+B\>\"", ",", "Right"}], "]"}]}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.856828616538381*^9, 3.856828678581092*^9}, {
   3.85687216602151*^9, 3.8568721698364143`*^9}, {3.8568725443963423`*^9, 
   3.856872546282604*^9}, {3.856879615677087*^9, 3.856879620446245*^9}, 
   3.856880317401417*^9},
 CellLabel->"In[24]:=",
 CellID->79212462],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
6OxmdNfQsWPHfHx82H2tjKenp06n42xUXnS6mTRpkru7e5MmTby8vFxcXPr3
73/gwAG165IHElQrv/zyi4ODA+urzs7O06ZNM9qAJiM0fdb3ZxrL0RlElVK1
hsaia9asGTp06IMHD9SuRU5IEFhMSkpKaGio2lXIDAkCi0GCAHggQQA8kCAA
HkgQAA8kCIAHEgTAAwkC4IEEAfBAggB4IEEAPJAgAB5IEAAPJAiABxIEwAMJ
AuCBBAHwQIIAeCBBADyQIAAeSBAADyQIgAcSBMADCQLggQQB8ECCAHggQQA8
kCAAHkgQAA8kCIAHEgTAAwkC4IEEAfBAggB4IEEAPJAgAB5IEAAPJAiABxIE
wAMJAuCBBAHwQILA8kpLSy+Kyc/PLysrU7u62kGCgBQUFAj7c15eXnFxsRLN
0TOPGjWqSZMmNgLOzs4DBw6MjY39888/lWhadkgQkGXLlvXs2VPYn1mXHjp0
aGpqquyNUkZYE82bN6ePiT6yCxcuxMTEODk50ULKV05OjuyNyg4JAr2wsDDW
pVeuXKnT6W7evPnDDz/07t2bLZwyZUpVVZW8LTZo0ICeuVOnToYLs7KyWIuB
gYHyNqcEJAj06EzEuu6ePXv0C2liEhQUxJYfPXpU3hYbN24sTBBp2bIlLXd1
dZU9szLKzc1duHAhHWHatGkzffr0jIyM8vJytYuSBxJkntWrVwsTRDZv3syW
U8TkbdFUgvz9/VmLmr2wMHny5KZNm0ZGRm7ZsuW7776jiRvV3L179xs3bqhd
mgyQIPOYSlB6ejpbPn/+fHlbFE1Qfn5+nTp1aHlISIi8zcmCTotUW79+/Ywu
s9DyWbNm0SqFLr9YEhJkHlMJCg8PZ8t//PFHeVtkCerYsePDhw/v3bt35swZ
+sg8PDxoYaNGja5duyZvc7JYtGhRz549TQ0v3377bVpbUVFh4arkhQSZR5+g
nTt36nS6goKCvXv3jhkzhi2cNGmS7C2yBAm98cYbt2/flr05fo8ePWrSpMnl
y5dNbUDJeu211zIzMy1YlPyQIPPoEyREUVKiRZagtm3bnj59OiUlZebMmX36
9HF2dqaFPj4+ycnJSjTK4/Dhw507d5behsa6NJyzTD0KQYLMo0/Q8uXL6Si6
dOnS0NBQ6t60xMHBISwsTPZpsug86NKlS15eXqySXbt2Ge2yY8eOYPX4+fnR
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
qwdAmvB2X9Wp/ZYAAAAAAAAAADx3/h9RzIc1
    "], {{0, 218.}, {278., 0}}, {0, 255},
    
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{278., 218.},
  PlotRange->{{0, 278.}, {0, 218.}}]], "Output",
 CellChangeTimes->{
  3.856828624621269*^9, 3.856828678969043*^9, 3.856828957763734*^9, 
   3.8568463896167583`*^9, {3.8568719670117493`*^9, 3.856871979422599*^9}, 
   3.856872101889352*^9, {3.8568721567066383`*^9, 3.856872170961132*^9}, 
   3.8568725470635757`*^9, 3.856879626536005*^9, 3.856880318569194*^9, 
   3.856904580921175*^9, 3.8569051679613047`*^9},
 CellLabel->"Out[24]=",
 CellID->358514377]
}, Open  ]],

Cell["\<\
All combinations of A and B, with 3rd qubit initialized at 1.\
\>", "CodeText",
 CellChangeTimes->{{3.8568287476961823`*^9, 3.856828759869239*^9}, {
  3.856880222457213*^9, 3.856880241305551*^9}},
 CellID->96324534],

Cell[BoxData[
 RowBox[{
  RowBox[{"statesor", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"QuantumState", "[", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"#", ",", "\"\<1\>\""}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}], ",", "2"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.856879978416482*^9, 3.856879986378169*^9}},
 CellLabel->"In[25]:=",
 CellID->1929906888],

Cell[TextData[StyleBox["Apply each combination for measurement.", \
"CodeText"]], "Text",
 CellChangeTimes->{{3.8568287927481003`*^9, 3.856828808226709*^9}, {
  3.856880404401133*^9, 3.856880423021605*^9}},
 CellID->1877318535],

Cell[BoxData[
 RowBox[{
  RowBox[{"finalor", "=", 
   RowBox[{"qOR", "/@", "statesor"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
   3.856828409274955*^9, 3.856828411811714*^9}, {3.85682848669272*^9, 
   3.856828507064117*^9}, {3.856872572216922*^9, 3.856872575032701*^9}, {
   3.856872653930731*^9, 3.856872655321228*^9}, {3.856880130328566*^9, 
   3.856880147398872*^9}, 3.8568804264082823`*^9, {3.856905232958951*^9, 
   3.8569052339835777`*^9}, {3.856905275879759*^9, 3.856905278810251*^9}},
 CellLabel->"In[59]:=",
 CellID->1262876021],

Cell["\<\
Delete cases with repetitive probabilities and retain only unique keys.\
\>", "CodeText",
 CellChangeTimes->{{3.856828810793725*^9, 3.85682887225996*^9}, {
  3.856880454240367*^9, 3.856880499162106*^9}},
 CellID->1076711283],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resultsor", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Keys", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"#", "[", "\"\<Probabilities\>\"", "]"}], ",", "0"}], "]"}], 
      "]"}], "&"}], "/@", "finalor"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
  3.856828409274955*^9, 3.856828411811714*^9}, {3.85682848669272*^9, 
  3.856828505792939*^9}, {3.856872582531971*^9, 3.8568725855386353`*^9}, {
  3.8569052475433397`*^9, 3.856905249798143*^9}, {3.85690528388551*^9, 
  3.85690528774155*^9}},
 CellLabel->"In[60]:=",
 CellID->1589323759],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.856828301204431*^9, 3.856828958060594*^9, 
  3.856846395821104*^9, 3.856872193594228*^9, 3.8568725872416763`*^9, 
  3.856872659577983*^9, 3.8568801559466553`*^9, 3.856880511195541*^9, 
  3.856904581044712*^9, 3.8569051683452053`*^9, 3.856905252496574*^9, 
  3.856905288976166*^9},
 CellLabel->"Out[60]=",
 CellID->1596635181]
}, Open  ]],

Cell["Visualize the Quantum version of OR truth table.", "CodeText",
 CellChangeTimes->{{3.856828938597994*^9, 3.856828945468927*^9}, {
  3.856869306944278*^9, 3.856869307245216*^9}, {3.8568805201145372`*^9, 
  3.856880532281611*^9}},
 CellID->1937551234],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"QuantumState", "[", "#", "]"}], "[", "\"\<Formula\>\"", 
           "]"}], "&"}], "/@", 
         RowBox[{"StringJoin", "@@@", 
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}], ",", "2"}], 
           "]"}]}]}], ",", "resultsor"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<\!\(\*TemplateBox[{
RowBox[{\"A\", \",\", \"B\"}]},\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{
RowBox[{\"A\", \"+\", \"B\"}]},\"Ket\"]\)\>\""}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"LightRed", ",", "LightBlue"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.856828400023141*^9, 3.8568284612675133`*^9}, {
   3.856828549164446*^9, 3.8568285525052633`*^9}, {3.856828597606731*^9, 
   3.856828601935616*^9}, 3.856846541640149*^9, 3.856846584418779*^9, 
   3.8568468241741*^9, {3.8568693204619007`*^9, 3.856869321188118*^9}, 
   3.856872203672542*^9, {3.856872592916176*^9, 3.856872593101226*^9}, {
   3.856874339943721*^9, 3.8568743538445*^9}, {3.856909152902143*^9, 
   3.856909153221716*^9}},
 CellLabel->"In[68]:=",
 CellID->2129050377],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*TemplateBox[{RowBox[{\\\"A\\\", \\\",\\\", \\\"B\\\"}]},\\\
\"Ket\\\"]\\)\"\>", "\<\"\\!\\(\\*TemplateBox[{RowBox[{\\\"A\\\", \\\"+\\\", \
\\\"B\\\"}]},\\\"Ket\\\"]\\)\"\>"},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
        RGBColor[1, 0.85, 0.85], 
        RGBColor[0.87, 0.94, 1]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8568284616468563`*^9, 3.856828602354045*^9, 3.8568289581778183`*^9, 
   3.856846395961659*^9, 3.856846595113328*^9, 3.8568468344852867`*^9, {
   3.856872197359568*^9, 3.856872204782853*^9}, 3.856872598442992*^9, 
   3.856872665055256*^9, 3.856874354755093*^9, 3.856880159638418*^9, 
   3.856880535455575*^9, 3.8569045811889877`*^9, 3.856905168551878*^9, 
   3.8569052946860037`*^9, 3.856909154141746*^9},
 CellLabel->"Out[68]=",
 CellID->1302406019]
}, Open  ]],

Cell["\<\
This is alternate approach where the measurement is done alongside with the \
circuit operator. \
\>", "Text",
 CellChangeTimes->{{3.856880554298449*^9, 3.8568806261404943`*^9}},
 CellID->1953374609]
}, Open  ]],

Cell[CellGroupData[{

Cell["XOR \[Rule] CNOT Gate", "Section",
 CellChangeTimes->{{3.856615155386527*^9, 3.856615173156804*^9}, {
  3.856615428866654*^9, 3.856615440904059*^9}, {3.8568716484381733`*^9, 
  3.856871654185068*^9}, {3.856872256889501*^9, 3.856872263095295*^9}},
 CellTags->"SectionHeader",
 CellID->1704509078],

Cell["\<\
XOR is widely used in cryptography as well as in generating parity bits for \
error checking and fault tolerance.
XOR gate gives a HIGH output when the number of true inputs is odd. \
\>", "Text",
 CellChangeTimes->{{3.856905399616377*^9, 3.856905416957655*^9}, {
  3.8569054674924307`*^9, 3.8569054927794027`*^9}},
 CellID->857426506],

Cell["Truth table of classical xor gate. ", "CodeText",
 CellChangeTimes->{{3.856905521819707*^9, 3.8569055527083282`*^9}},
 CellID->1452903198],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"xor", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"BooleanTable", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", 
        RowBox[{"Xor", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Text", "@", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{"xor", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<A\>\"", ",", "\"\<B\>\"", ",", "\"\<A\[CirclePlus]B\>\""}], 
       "}"}]}], "]"}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Yellow", ",", ".9"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"White", ",", 
           RowBox[{"Lighter", "[", 
            RowBox[{
             RowBox[{"Blend", "[", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], 
            "]"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Alignment", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Center", ",", 
        RowBox[{"{", "Center", "}"}]}], "}"}], "}"}]}], ",", 
    RowBox[{"ItemSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"5", ",", "5", ",", "5"}], "}"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"ItemStyle", "\[Rule]", "14"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8568691312568207`*^9, 3.856869174800956*^9}, {
  3.85687166186838*^9, 3.8568716637265472`*^9}, {3.856872270409206*^9, 
  3.8568722720919952`*^9}, {3.856881565055517*^9, 3.856881590502873*^9}},
 CellLabel->"In[29]:=",
 CellID->252222966],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    TagBox[GridBox[{
       {"\<\"A\"\>", "\<\"B\"\>", "\<\"A\[CirclePlus]B\"\>"},
       {"1", "1", "0"},
       {"1", "0", "1"},
       {"0", "1", "1"},
       {"0", "0", "0"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {Center, Center, {Center}}},
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
          RGBColor[1., 1., 0.9], {
           GrayLevel[1], 
           RGBColor[0.8, 0.9, 0.9]}}},
      GridBoxDividers->{"Columns" -> {
          RGBColor[0.2, 0.2, 0.2], {
           RGBColor[0.75, 0.75, 0.75]}, 
          RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
          RGBColor[0.2, 0.2, 0.2], 
          RGBColor[0.2, 0.2, 0.2], {False}, 
          RGBColor[0.2, 0.2, 0.2]}},
      GridBoxFrame->{
       "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> RGBColor[0.2, 0.2, 0.2]}},
      GridBoxItemSize->{"Columns" -> {5, 5, 5}},
      GridBoxItemStyle->{"Columns" -> {{14}}, "Rows" -> {{14}}}],
     "Grid"], TextForm]], "InlineText"],
  Text[
   Grid[{{"A", "B", "A\[CirclePlus]B"}, {1, 1, 0}, {1, 0, 1}, {0, 1, 1}, {0, 
     0, 0}}, Background -> {None, {
       RGBColor[1., 1., 0.9], {
        GrayLevel[1], 
        RGBColor[0.8, 0.9, 0.9]}}}, Dividers -> {{
       RGBColor[0.2, 0.2, 0.2], {
        RGBColor[0.75, 0.75, 0.75]}, 
       RGBColor[0.2, 0.2, 0.2]}, {
       RGBColor[0.2, 0.2, 0.2], 
       RGBColor[0.2, 0.2, 0.2], {False}, 
       RGBColor[0.2, 0.2, 0.2]}}, Alignment -> {{Center, Center, {Center}}}, 
    ItemSize -> {{5, 5, 5}}, Frame -> RGBColor[0.2, 0.2, 0.2], ItemStyle -> 
    14]]]], "Output",
 CellChangeTimes->{{3.856869158373537*^9, 3.85686917571425*^9}, 
   3.8568716676742887`*^9, 3.8568722741230288`*^9, 3.85688159098459*^9, 
   3.856904581221877*^9, 3.8569051685831213`*^9},
 CellLabel->"Out[30]=",
 CellID->1858564158]
}, Open  ]],

Cell["\<\
Note that the state is high only when both states are not same.\
\>", "Text",
 CellChangeTimes->{{3.856905563078724*^9, 3.8569056063910017`*^9}},
 CellID->1812517473],

Cell["\<\
Quantum counterpart of XOR operation is realized using two CNOT gates. We \
will use the measurement operation altogether again.\
\>", "Text",
 CellChangeTimes->{{3.856905611346377*^9, 3.856905730953487*^9}},
 CellID->1352524921],

Cell["Define circuit operator initializing third qubit as 0.", "CodeText",
 CellChangeTimes->{{3.856828696293359*^9, 3.856828704903023*^9}, 
   3.856905692173884*^9, {3.856905757808215*^9, 3.8569057844149714`*^9}},
 CellID->142912937],

Cell[BoxData[
 RowBox[{
  RowBox[{"qXOR", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", " ", 
      RowBox[{"QuantumMeasurementOperator", "[", 
       RowBox[{"{", "3", "}"}], "]"}]}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
   3.856828409274955*^9, 3.856828411811714*^9}, 3.85682848669272*^9, {
   3.85687195807465*^9, 3.856871975412807*^9}, 3.85687209739187*^9, {
   3.85687213887805*^9, 3.856872152739169*^9}, {3.8568723077347803`*^9, 
   3.856872403168063*^9}, {3.856872603696773*^9, 3.856872605489979*^9}, {
   3.8569057356761227`*^9, 3.856905748459773*^9}},
 CellLabel->"In[62]:=",
 CellID->1051014813],

Cell["Visualize it.", "CodeText",
 CellChangeTimes->{{3.856828707126808*^9, 3.85682871588899*^9}, 
   3.856905688622087*^9},
 CellID->1352965516],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qXOR", "[", 
  RowBox[{"\"\<Diagram\>\"", ",", 
   RowBox[{"\"\<WireLabels\>\"", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<A\>\"", ",", "Left"}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<A\>\"", ",", "Right"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<B\>\"", ",", "Left"}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<B\>\"", ",", "Right"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{
         "\"\<\!\(\*TemplateBox[{\"0\"},\"Ket\"]\)\>\"", ",", "Left"}], "]"}],
         ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<A\[CirclePlus]B\>\"", ",", "Right"}], "]"}]}], "}"}]}], 
     "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.856828616538381*^9, 3.856828678581092*^9}, {
  3.85687216602151*^9, 3.8568721698364143`*^9}, {3.8568724151423273`*^9, 
  3.856872444921348*^9}, {3.856872608900915*^9, 3.856872610538076*^9}, {
  3.856912197675454*^9, 3.8569121993083143`*^9}},
 CellLabel->"In[96]:=",
 CellID->1734572976],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQtUFNUfxxdYUAREFAGVTA3NpFRUfBT4THwfPaaRpSiWrzQt9ZhmZSSZ
+SilfOGjxBdKYWZmvkVRDEoEfIUCHp9lIiIGLg/5f+Oe/5xxdhZ2d3Z2Vub3
OUfPcnd274+Z3+fe353ZZZqOnTZ0vL1Go5lRE/8NDX+/x/Tp4XNeqYMfhk+d
MWnC1HFv9Zs6c9yEcdM7j3VA4w7887TTaP57XE4QBEEQBEEQBEEQBEEQhPzk
5eUlJCSkpKQ8evRI6VgI4sng1q1bISEh9erV6927t7e3t4+Pz7Rp04qLi5WO
iyBsmqysLMgSFBR09+5d/JiRkWFnZ6fRaCIiIpQOjSBsmgEDBmi1WhjEtXTv
3h3ujB07VsGoCMLGSU5OhiY9e/bkN6KEi4mJyc3NVSoqgrB9Vq9eDXfCw8Or
3LKgoGAhQdgSJ06csIIjhnjvvffgzpAhQxSMgSCeRObPnw93GjRooNPpBE+V
lJTwf6R55wllwYIFSocgF8rOO3FxcZoKli9fzm/Pzs5u27YtXeh50klPT588
ebLSUVRP8vLyvLy84I5Wq12zZk1xcXFRUdG2bdtatGixfft2paMjpBIcHGxv
b5+SkqJ0INUTmMIu6ABnZ2dXV9f/vg00fLjScRFSiYmJYYe1Y8eOVELIxL59
+5o2bcr2s5ub28cff1xWVqZ0UIQk8vPzfXx8NP8nOjpa6YiqM9evX8/IyCgt
LVU6EMICTJs2TcOjXr16dMGOIKokPT3dwcFB8zgTJkxQOi6CsHWCg4M1etBJ
A4KoHO4UgT500oAgDCE4RaDP2rVrlY6RIGwRwSkCfTw9PemkAUEISE9P12q1
lbsDJk6cqHSkBGFbXLx4cS+P6OjoefPm4cGYMWP47fv371c6UoKwaS5cuLBr
1y48+Pzzz5WOhSCeJMgdgjAPcocgzIPcIQjzIHcIwjzIHYIwD3KHIMyD3CEI
8yB3CMI8yB2CMA9yhyDMg9whCPMgdwjCPMgdgjAPcocgzIPcIQjzIHcIwjzI
HYIwD3KHIMyD3CEI8yB3rMnatWuLi4uVjoKwDKp1x/ppnJKSotFotmzZYs1O
CflQpzuKpHFYWBg6DQwMtGanhHyo0x3rp/Ht27dr1KjB/m5kYmKi1fol5EOF
7iiSxpGRkU5OTvb29uh02LBh1umUkBUVumP9NC4pKfH19Z05cya6Q6cODg5X
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
BEHIx/8AotbJUA==
    "], {{0, 170.}, {276., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{276., 170.},
  PlotRange->{{0, 276.}, {0, 170.}}]], "Output",
 CellChangeTimes->{
  3.856828624621269*^9, 3.856828678969043*^9, 3.856828957763734*^9, 
   3.8568463896167583`*^9, {3.8568719670117493`*^9, 3.856871979422599*^9}, 
   3.856872101889352*^9, {3.8568721567066383`*^9, 3.856872170961132*^9}, 
   3.8568724071014643`*^9, {3.8568724393659286`*^9, 3.856872445861195*^9}, 
   3.856872611816866*^9, 3.8569045813213673`*^9, 3.856905168721826*^9, 
   3.856905794136283*^9, 3.8569122003679943`*^9},
 CellLabel->"Out[96]=",
 CellID->1859504404]
}, Open  ]],

Cell["All combinations of A and B, initializing third qubit as 0.", "CodeText",
 CellChangeTimes->{{3.8568287476961823`*^9, 3.856828759869239*^9}, {
  3.856905809363295*^9, 3.856905826064197*^9}},
 CellID->1365690900],

Cell[BoxData[
 RowBox[{
  RowBox[{"statesxor", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"QuantumState", "[", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"#", ",", "\"\<0\>\""}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}], ",", "2"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
  3.856828409274955*^9, 3.856828411811714*^9}, {3.85682848669272*^9, 
  3.856828491126009*^9}, {3.856872176308179*^9, 3.85687217655755*^9}, {
  3.856872450196806*^9, 3.8568724506022577`*^9}, {3.856872615598215*^9, 
  3.856872615931533*^9}},
 CellLabel->"In[33]:=",
 CellID->861737164],

Cell["Measure all possible states.", "CodeText",
 CellChangeTimes->{{3.8568287927481003`*^9, 3.856828808226709*^9}, {
  3.856905879582089*^9, 3.85690595097259*^9}},
 CellID->2044273551],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"finalxor", "=", 
  RowBox[{"qXOR", "/@", "statesxor"}]}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
  3.856828409274955*^9, 3.856828411811714*^9}, {3.85682848669272*^9, 
  3.856828507064117*^9}, {3.856872622021955*^9, 3.856872629890641*^9}, {
  3.856905854121613*^9, 3.8569058609845037`*^9}},
 CellLabel->"In[64]:=",
 CellID->514703304],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["QuantumMeasurement",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumMeasurement[
     Wolfram`QuantumFramework`QuantumMeasurementOperator[
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[Automatic, {16}, 0, {1, {{0, 1}, {{1}}}, {1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[0, Bold], "Eigenvalue 1"], {0, {1}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[1, Bold], "Eigenvalue 2"], {1, {2}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
          CircleTimes["Computational", 
            Superscript["\[Pi]", 
             Row[{}]]][
            CircleTimes[
             "Controlled"["NOT", {2}, {}], 
             Superscript["\[Pi]", 
              Row[{}]]][
             CircleTimes[
              "Controlled"["NOT", {1}, {}], 
              Superscript["\[Pi]", 
               Row[{}]]]["000"]]], "ParameterSpec" -> {}|>]], {{0}, {1, 2, 
        3}}], {3}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumMeasurement",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumMeasurement[
     Wolfram`QuantumFramework`QuantumMeasurementOperator[
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[Automatic, {16}, 0, {1, {{0, 1}, {{12}}}, {1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[0, Bold], "Eigenvalue 1"], {0, {1}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[1, Bold], "Eigenvalue 2"], {1, {2}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
          CircleTimes["Computational", 
            Superscript["\[Pi]", 
             Row[{}]]][
            CircleTimes[
             "Controlled"["NOT", {2}, {}], 
             Superscript["\[Pi]", 
              Row[{}]]][
             CircleTimes[
              "Controlled"["NOT", {1}, {}], 
              Superscript["\[Pi]", 
               Row[{}]]]["010"]]], "ParameterSpec" -> {}|>]], {{0}, {1, 2, 
        3}}], {3}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumMeasurement",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumMeasurement[
     Wolfram`QuantumFramework`QuantumMeasurementOperator[
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[Automatic, {16}, 0, {1, {{0, 1}, {{14}}}, {1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[0, Bold], "Eigenvalue 1"], {0, {1}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[1, Bold], "Eigenvalue 2"], {1, {2}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
          CircleTimes["Computational", 
            Superscript["\[Pi]", 
             Row[{}]]][
            CircleTimes[
             "Controlled"["NOT", {2}, {}], 
             Superscript["\[Pi]", 
              Row[{}]]][
             CircleTimes[
              "Controlled"["NOT", {1}, {}], 
              Superscript["\[Pi]", 
               Row[{}]]]["100"]]], "ParameterSpec" -> {}|>]], {{0}, {1, 2, 
        3}}], {3}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumMeasurement",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumMeasurement[
     Wolfram`QuantumFramework`QuantumMeasurementOperator[
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[Automatic, {16}, 0, {1, {{0, 1}, {{7}}}, {1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[0, Bold], "Eigenvalue 1"], {0, {1}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[1, Bold], "Eigenvalue 2"], {1, {2}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
          CircleTimes["Computational", 
            Superscript["\[Pi]", 
             Row[{}]]][
            CircleTimes[
             "Controlled"["NOT", {2}, {}], 
             Superscript["\[Pi]", 
              Row[{}]]][
             CircleTimes[
              "Controlled"["NOT", {1}, {}], 
              Superscript["\[Pi]", 
               Row[{}]]]["110"]]], "ParameterSpec" -> {}|>]], {{0}, {1, 2, 
        3}}], {3}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.856828958005897*^9, 3.85684639534524*^9, 
  3.8568721864057827`*^9, 3.856872463037524*^9, 3.856872631332234*^9, 
  3.856904581396965*^9, 3.856905173427065*^9, 3.85690586228454*^9},
 CellLabel->"Out[64]=",
 CellID->900065220]
}, Open  ]],

Cell["There are two operations which are at HIGH state.", "Text",
 CellChangeTimes->{{3.8569059641914473`*^9, 3.8569060048466377`*^9}},
 CellID->27001147],

Cell[TextData[StyleBox["Deleting cases with repetitive probabilities and \
retaining only unique keys.", "CodeText"]], "Text",
 CellChangeTimes->{{3.856828810793725*^9, 3.85682887225996*^9}, {
  3.85690601896032*^9, 3.856906059504994*^9}},
 CellID->339602398],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resultsxor", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Keys", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"#", "[", "\"\<Probabilities\>\"", "]"}], ",", "0"}], "]"}], 
      "]"}], "&"}], "/@", "finalxor"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
  3.856828409274955*^9, 3.856828411811714*^9}, {3.85682848669272*^9, 
  3.856828505792939*^9}, {3.856872676131029*^9, 3.856872681434638*^9}},
 CellLabel->"In[65]:=",
 CellID->1833453107],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.856828301204431*^9, 3.856828958060594*^9, 
  3.856846395821104*^9, 3.856872193594228*^9, 3.8568724657790003`*^9, 
  3.8568726820202293`*^9, 3.856904581482298*^9, 3.856905173851686*^9, 
  3.856906062531495*^9},
 CellLabel->"Out[65]=",
 CellID->1767084942]
}, Open  ]],

Cell[TextData[StyleBox["Visualize the truth table", "CodeText"]], "Text",
 CellChangeTimes->{{3.856828938597994*^9, 3.856828945468927*^9}, {
  3.856869306944278*^9, 3.856869307245216*^9}},
 CellID->770937841],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"QuantumState", "[", "#", "]"}], "[", "\"\<Formula\>\"", 
           "]"}], "&"}], "/@", 
         RowBox[{"StringJoin", "@@@", 
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}], ",", "2"}], 
           "]"}]}]}], ",", "resultsxor"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<\!\(\*TemplateBox[{
RowBox[{\"A\", \",\", \"B\"}]},\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{
RowBox[{\"A\", \"\[CirclePlus]\", \"B\"}]},\"Ket\"]\)\>\""}], "}"}]}], "]"}], 
   ",", 
   RowBox[{"Frame", "->", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"LightRed", ",", "LightBlue"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.856828400023141*^9, 3.8568284612675133`*^9}, {
   3.856828549164446*^9, 3.8568285525052633`*^9}, {3.856828597606731*^9, 
   3.856828601935616*^9}, 3.856846541640149*^9, 3.856846584418779*^9, 
   3.8568468241741*^9, {3.8568693204619007`*^9, 3.856869321188118*^9}, 
   3.856872203672542*^9, {3.856872470802052*^9, 3.856872474021697*^9}, {
   3.856872689301092*^9, 3.8568726897749968`*^9}, {3.856874286368606*^9, 
   3.856874331144257*^9}, {3.8569090964423237`*^9, 3.856909096865612*^9}, 
   3.85690913717763*^9},
 CellLabel->"In[67]:=",
 CellID->1383451336],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*TemplateBox[{RowBox[{\\\"A\\\", \\\",\\\", \\\"B\\\"}]},\\\
\"Ket\\\"]\\)\"\>", "\<\"\\!\\(\\*TemplateBox[{RowBox[{\\\"A\\\", \\\"\
\[CirclePlus]\\\", \\\"B\\\"}]},\\\"Ket\\\"]\\)\"\>"},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
        RGBColor[1, 0.85, 0.85], 
        RGBColor[0.87, 0.94, 1]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8568284616468563`*^9, 3.856828602354045*^9, 3.8568289581778183`*^9, 
   3.856846395961659*^9, 3.856846595113328*^9, 3.8568468344852867`*^9, {
   3.856872197359568*^9, 3.856872204782853*^9}, 3.856872475236497*^9, 
   3.856872690635498*^9, 3.856874331953369*^9, 3.85690458150245*^9, 
   3.8569051739180593`*^9, 3.856909098742652*^9, 3.85690913826655*^9},
 CellLabel->"Out[67]=",
 CellID->818350347]
}, Open  ]],

Cell["\<\
The truth table of quantum version of XOR complies with the classical \
counterpart.\
\>", "Text",
 CellChangeTimes->{{3.8569065521116133`*^9, 3.8569066784183064`*^9}},
 CellID->1571475290]
}, Open  ]],

Cell[CellGroupData[{

Cell["NAND \[Rule] Toffoli Gate", "Section",
 CellChangeTimes->{{3.856615155386527*^9, 3.856615173156804*^9}, {
  3.856615428866654*^9, 3.856615440904059*^9}, {3.8568716484381733`*^9, 
  3.856871654185068*^9}, {3.856872256889501*^9, 3.856872263095295*^9}, {
  3.856872497082554*^9, 3.856872506600779*^9}},
 CellTags->"SectionHeader",
 CellID->249898406],

Cell["\<\
NAND gate produces an output which is LOW only if all its inputs are HIGH. \
Its output is thus complement to that of an AND gate.\
\>", "Text",
 CellChangeTimes->{{3.856906736803751*^9, 3.856906775274604*^9}, {
  3.856906807151655*^9, 3.856906808319481*^9}},
 CellID->987183498],

Cell["Truth table of Classical NAND gate.", "CodeText",
 CellChangeTimes->{{3.856906875876133*^9, 3.8569069006843*^9}},
 CellID->1743415537],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nand", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"BooleanTable", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", 
        RowBox[{"Nand", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Text", "@", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{"nand", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<A\>\"", ",", "\"\<B\>\"", ",", 
        "\"\<\!\(\*OverscriptBox[\(AB\), \(_\)]\)\>\""}], "}"}]}], "]"}], ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Yellow", ",", ".9"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"White", ",", 
           RowBox[{"Lighter", "[", 
            RowBox[{
             RowBox[{"Blend", "[", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], 
            "]"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Alignment", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Center", ",", 
        RowBox[{"{", "Center", "}"}]}], "}"}], "}"}]}], ",", 
    RowBox[{"ItemSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"5", ",", "5", ",", "5"}], "}"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"ItemStyle", "\[Rule]", "14"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8568691312568207`*^9, 3.856869174800956*^9}, {
   3.85687166186838*^9, 3.8568716637265472`*^9}, {3.856872270409206*^9, 
   3.8568722720919952`*^9}, {3.856872514479711*^9, 3.856872517264045*^9}, 
   3.856873310748554*^9, {3.856881599430357*^9, 3.8568816259440002`*^9}},
 CellLabel->"In[38]:=",
 CellID->1711979757],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    TagBox[GridBox[{
       {"\<\"A\"\>", "\<\"B\"\>", "\<\"\\!\\(\\*OverscriptBox[\\(AB\\), \
\\(_\\)]\\)\"\>"},
       {"1", "1", "0"},
       {"1", "0", "1"},
       {"0", "1", "1"},
       {"0", "0", "1"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {Center, Center, {Center}}},
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
          RGBColor[1., 1., 0.9], {
           GrayLevel[1], 
           RGBColor[0.8, 0.9, 0.9]}}},
      GridBoxDividers->{"Columns" -> {
          RGBColor[0.2, 0.2, 0.2], {
           RGBColor[0.75, 0.75, 0.75]}, 
          RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
          RGBColor[0.2, 0.2, 0.2], 
          RGBColor[0.2, 0.2, 0.2], {False}, 
          RGBColor[0.2, 0.2, 0.2]}},
      GridBoxFrame->{
       "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> RGBColor[0.2, 0.2, 0.2]}},
      GridBoxItemSize->{"Columns" -> {5, 5, 5}},
      GridBoxItemStyle->{"Columns" -> {{14}}, "Rows" -> {{14}}}],
     "Grid"], TextForm]], "InlineText"],
  Text[
   Grid[{{"A", "B", "\!\(\*OverscriptBox[\(AB\), \(_\)]\)"}, {1, 1, 0}, {1, 0,
      1}, {0, 1, 1}, {0, 0, 1}}, Background -> {None, {
       RGBColor[1., 1., 0.9], {
        GrayLevel[1], 
        RGBColor[0.8, 0.9, 0.9]}}}, Dividers -> {{
       RGBColor[0.2, 0.2, 0.2], {
        RGBColor[0.75, 0.75, 0.75]}, 
       RGBColor[0.2, 0.2, 0.2]}, {
       RGBColor[0.2, 0.2, 0.2], 
       RGBColor[0.2, 0.2, 0.2], {False}, 
       RGBColor[0.2, 0.2, 0.2]}}, Alignment -> {{Center, Center, {Center}}}, 
    ItemSize -> {{5, 5, 5}}, Frame -> RGBColor[0.2, 0.2, 0.2], ItemStyle -> 
    14]]]], "Output",
 CellChangeTimes->{{3.856869158373537*^9, 3.85686917571425*^9}, 
   3.8568716676742887`*^9, 3.8568722741230288`*^9, 3.85687251778144*^9, 
   3.856873311602813*^9, 3.856881628409725*^9, 3.856904581543029*^9, 
   3.856905173948489*^9},
 CellLabel->"Out[39]=",
 CellID->1662651311]
}, Open  ]],

Cell["\<\
Quantum counterpart of NAND gate is realized using Toffoli gate with 3rd \
qubit initialized as 1.\
\>", "Text",
 CellChangeTimes->{{3.8569085812520514`*^9, 3.856908632685915*^9}, {
  3.85690922978159*^9, 3.856909244020856*^9}},
 CellID->1662261082],

Cell["Define circuit operator.", "CodeText",
 CellChangeTimes->{{3.856828696293359*^9, 3.856828704903023*^9}, 
   3.856906959854618*^9},
 CellID->1249095083],

Cell[BoxData[
 RowBox[{
  RowBox[{"qNAND", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"QuantumOperator", "[", "\"\<Toffoli\>\"", "]"}], "}"}], "]"}]}],
   ";"}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
   3.856828409274955*^9, 3.856828411811714*^9}, 3.85682848669272*^9, {
   3.85687195807465*^9, 3.856871975412807*^9}, 3.85687209739187*^9, {
   3.85687213887805*^9, 3.856872152739169*^9}, {3.8568723077347803`*^9, 
   3.856872403168063*^9}, 3.856872703274955*^9, {3.856872946861409*^9, 
   3.856872975791581*^9}},
 CellLabel->"In[40]:=",
 CellID->1888410556],

Cell[TextData[StyleBox["Visualize it.", "CodeText"]], "Text",
 CellChangeTimes->{{3.856828707126808*^9, 3.85682871588899*^9}, 
   3.856908706528551*^9},
 CellID->855395679],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qNAND", "[", 
  RowBox[{"\"\<Diagram\>\"", ",", 
   RowBox[{"\"\<WireLabels\>\"", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<A\>\"", ",", "Left"}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<A\>\"", ",", "Right"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<B\>\"", ",", "Left"}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<B\>\"", ",", "Right"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{
         "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", "Left"}], "]"}],
         ",", 
        RowBox[{"Placed", "[", 
         RowBox[{
         "\"\<\!\(\*OverscriptBox[\(AB\), \(_\)]\)\>\"", ",", "Right"}], 
         "]"}]}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.856828616538381*^9, 3.856828678581092*^9}, {
   3.85687216602151*^9, 3.8568721698364143`*^9}, {3.8568724151423273`*^9, 
   3.856872444921348*^9}, 3.856872707903488*^9, {3.856872993197712*^9, 
   3.85687302598949*^9}, {3.85687310087715*^9, 3.856873128824596*^9}, {
   3.8569121814580097`*^9, 3.856912186718563*^9}},
 CellLabel->"In[95]:=",
 CellID->1379643935],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
nzbUV8QIgkjC/wD+/mqO
    "], {{0, 137.}, {178., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{178., 137.},
  PlotRange->{{0, 178.}, {0, 137.}}]], "Output",
 CellChangeTimes->{
  3.856828624621269*^9, 3.856828678969043*^9, 3.856828957763734*^9, 
   3.8568463896167583`*^9, {3.8568719670117493`*^9, 3.856871979422599*^9}, 
   3.856872101889352*^9, {3.8568721567066383`*^9, 3.856872170961132*^9}, 
   3.8568724071014643`*^9, {3.8568724393659286`*^9, 3.856872445861195*^9}, 
   3.8568727088865347`*^9, 3.8568729835394497`*^9, 3.856873131776992*^9, 
   3.856904581582019*^9, 3.856905173997381*^9, 3.856912188414217*^9},
 CellLabel->"Out[95]=",
 CellID->361003237]
}, Open  ]],

Cell["All combinations of A and B, initializing 3rd qubit as 1.", "CodeText",
 CellChangeTimes->{{3.8568287476961823`*^9, 3.856828759869239*^9}, {
  3.85690869945347*^9, 3.856908711485339*^9}, {3.856909561767384*^9, 
  3.8569095831278353`*^9}},
 CellID->1363725598],

Cell[BoxData[
 RowBox[{
  RowBox[{"statesnand", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"QuantumState", "[", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"#", ",", "\"\<1\>\""}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}], ",", "2"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
  3.856828409274955*^9, 3.856828411811714*^9}, {3.85682848669272*^9, 
  3.856828491126009*^9}, {3.856872176308179*^9, 3.85687217655755*^9}, {
  3.856872450196806*^9, 3.8568724506022577`*^9}, {3.8568727133048983`*^9, 
  3.8568727139555902`*^9}, {3.856873172782796*^9, 3.856873173256551*^9}},
 CellLabel->"In[42]:=",
 CellID->43161155],

Cell["Measuring third qubit initialized as 1.", "CodeText",
 CellChangeTimes->{{3.856911320236834*^9, 3.856911336412972*^9}},
 CellID->904909301],

Cell[BoxData[
 RowBox[{
  RowBox[{"finalnand", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"QuantumMeasurementOperator", "[", 
      RowBox[{"{", "3", "}"}], "]"}], "[", "qNAND", "]"}], "/@", 
    "statesnand"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.856911352420218*^9, 3.856911438474965*^9}},
 CellLabel->"In[89]:=",
 CellID->1141684488],

Cell["Deleting repetitive probabilities and retaining unique keys.", \
"CodeText",
 CellChangeTimes->{{3.8569114769943867`*^9, 3.856911508970954*^9}},
 CellID->635719409],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resultsnand", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Keys", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"#", "[", "\"\<Probabilities\>\"", "]"}], ",", "0"}], "]"}], 
      "]"}], "&"}], "/@", "finalnand"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
  3.856828409274955*^9, 3.856828411811714*^9}, {3.85682848669272*^9, 
  3.856828505792939*^9}, {3.856872735448701*^9, 3.8568727402910223`*^9}},
 CellLabel->"In[45]:=",
 CellID->577210595],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856828301204431*^9, 3.856828958060594*^9, 3.856846395821104*^9, 
   3.856872193594228*^9, 3.8568724657790003`*^9, {3.856872736826066*^9, 
   3.856872740866646*^9}, 3.856873189702972*^9, 3.8569045817393913`*^9, 
   3.856905175163206*^9},
 CellLabel->"Out[45]=",
 CellID->285284417]
}, Open  ]],

Cell["Truth table of Quantum version of NAND gate.", "CodeText",
 CellChangeTimes->{{3.8569117102394238`*^9, 3.856911735514165*^9}},
 CellID->2001260150],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"QuantumState", "[", "#", "]"}], "[", "\"\<Formula\>\"", 
           "]"}], "&"}], "/@", 
         RowBox[{"StringJoin", "@@@", 
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}], ",", "2"}], 
           "]"}]}]}], ",", "resultsnand"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<\!\(\*TemplateBox[{
RowBox[{\"A\", \",\", \"B\"}]},\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{
OverscriptBox[\"AB\", \"_\"]},\"Ket\"]\)\>\""}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"LightRed", ",", "LightBlue"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.856828400023141*^9, 3.8568284612675133`*^9}, {
   3.856828549164446*^9, 3.8568285525052633`*^9}, {3.856828597606731*^9, 
   3.856828601935616*^9}, 3.856846541640149*^9, 3.856846584418779*^9, 
   3.8568468241741*^9, {3.8568693204619007`*^9, 3.856869321188118*^9}, 
   3.856872203672542*^9, {3.856872470802052*^9, 3.856872474021697*^9}, {
   3.856872746469124*^9, 3.8568727473336554`*^9}, 3.856873210002681*^9, {
   3.856874263553432*^9, 3.8568742682108088`*^9}, {3.8569092098335333`*^9, 
   3.856909210197556*^9}, {3.856910815178627*^9, 3.856910815627078*^9}, {
   3.856911563907276*^9, 3.856911609473366*^9}},
 CellLabel->"In[91]:=",
 CellID->1308594576],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*TemplateBox[{RowBox[{\\\"A\\\", \\\",\\\", \\\"B\\\"}]},\\\
\"Ket\\\"]\\)\"\>", "\<\"\\!\\(\\*TemplateBox[{OverscriptBox[\\\"AB\\\", \
\\\"_\\\"]},\\\"Ket\\\"]\\)\"\>"},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
        RGBColor[1, 0.85, 0.85], 
        RGBColor[0.87, 0.94, 1]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.8568284616468563`*^9, 3.856828602354045*^9, 3.8568289581778183`*^9, 
   3.856846395961659*^9, 3.856846595113328*^9, 3.8568468344852867`*^9, {
   3.856872197359568*^9, 3.856872204782853*^9}, 3.856872475236497*^9, 
   3.856872748437735*^9, 3.856873211085307*^9, 3.856874274784432*^9, 
   3.856904581757629*^9, 3.856905175238234*^9, 3.856909210722456*^9, 
   3.856910817306222*^9, 3.856911567623335*^9, 3.856911654075309*^9},
 CellLabel->"Out[91]=",
 CellID->1195141912]
}, Open  ]],

Cell["Alternate approach of realizing Toffoli gate.", "CodeText",
 CellChangeTimes->{{3.8569108869358892`*^9, 3.856910909054345*^9}},
 CellID->427588850],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"qNANDalt", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<H\>\"", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"QuantumOperator", "[", 
        RowBox[{"\"\<T\>\"", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}], "[", "\"\<Dagger\>\"", "]"}], ",", 
      
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<T\>\"", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"QuantumOperator", "[", 
        RowBox[{"\"\<T\>\"", ",", 
         RowBox[{"{", "3", "}"}]}], "]"}], "[", "\"\<Dagger\>\"", "]"}], ",", 
      
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "3"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<T\>\"", ",", 
        RowBox[{"{", "2", "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<T\>\"", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<H\>\"", ",", 
        RowBox[{"{", "3", "}"}]}], "]"}], ",", 
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<T\>\"", ",", 
        RowBox[{"{", "1", "}"}]}], "]"}], ",", 
      RowBox[{
       RowBox[{"QuantumOperator", "[", 
        RowBox[{"\"\<T\>\"", ",", 
         RowBox[{"{", "2", "}"}]}], "]"}], "[", "\"\<Dagger\>\"", "]"}], ",", 
      
      RowBox[{"QuantumOperator", "[", 
       RowBox[{"\"\<CNOT\>\"", ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "2"}], "}"}]}], "]"}], ",", 
      RowBox[{"QuantumMeasurementOperator", "[", 
       RowBox[{"{", "3", "}"}], "]"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"qNANDalt", "[", 
  RowBox[{"\"\<Diagram\>\"", ",", 
   RowBox[{"\"\<WireLabels\>\"", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<X\>\"", ",", "Left"}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<X\>\"", ",", "Right"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<Y\>\"", ",", "Left"}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<Y\>\"", ",", "Right"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{
         "\"\<\!\(\*TemplateBox[{\"1\"},\"Ket\"]\)\>\"", ",", "Left"}], "]"}],
         ",", 
        RowBox[{"Placed", "[", 
         RowBox[{
         "\"\<\!\(\*OverscriptBox[\(XY\), \(_\)]\)\>\"", ",", "Right"}], 
         "]"}]}], "}"}]}], "}"}]}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.856909934675721*^9, 3.856910004932228*^9}, {
  3.85691024140443*^9, 3.856910335568645*^9}, {3.856910367601213*^9, 
  3.856910487224066*^9}, {3.856910562382793*^9, 3.856910581208804*^9}, {
  3.856911170271037*^9, 3.8569111869513407`*^9}, {3.856911243317737*^9, 
  3.856911253324201*^9}, {3.856912217099799*^9, 3.856912217632721*^9}},
 CellLabel->"In[97]:=",
 CellID->1189757772],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1: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
qsGtzLx58zhNH9SUNWvWKJ0XFTT8jWJ5ebm7uzvnUDo7O+fk5CidGhU0+Y3i
3bt3YSwGh5JMcp4X27RpU0REhOjgoi1mMpSldO7cmX27Hft5scLCQjiNX7x4
ISW+MLbyjaKOsmjGjx+vGYtBlalXrx65JYAAvVymHmkMDVtMp7+mAIeP/b3i
jz/+qHRStNCkxYDg4OC5c+eSvzkWg+ED+3KSpajHYitXrvT29mYm2Rb74osv
hg4dKiW4SWzIYlRFM3z4cBI8PT1d9uDWp7i4GNqEunXrNmrUaNasWdZ59lAR
tG0x4L///S80Ak5OTtD6HTp0SOl0KGJNi2VkZJD6HhMTIz2aMHfu3LF78/Yh
xmKlpaW9e/fu16+flLqpHotBcapXr+7n50eKw1gMSl2jRo2srCwpwU1iQxaj
J5qioiJfX18SfNWqVfIGV5AZM2Z88803SmdBF81bjNCsWTNtPyyms67F1q9f
T+p7QEDA69evJUYzyZUrVxo3bhwVFQUDE2hqoFZ6eHgEBQVJ/IZEPRYDXr16
1bNnz3bt2i1durROnToLFy7s1asXhM3Pz5cY2SS2YjFKooGeQ2BgIOfqA2xo
yZIlcm1CQdBimgEtZhECbXJqaioMGdj1HYTSv39/cdHMp6CgID4+PjIy0sfH
JzY29uTJk9JjchKzaIApHEocIOV9+/ZNnDixadOmQ4YMSUpKono5jEH9FtO2
aKiCFtMMaDGLkKVNphRNRjiJWTTAFA5lW6jfYoho0GKaAS1mEZXNYiIGmMZC
2SJoMQ2DFtMMaDGLqGwWU1Uo64MW0zBoMc2AFrMIO7mRJSvZqQxlNAe0mIZB
i2kGtBiCGAMtpmHQYpoBLYYgxkCLaRi0mGZAiyGIMdBiGgYtphnQYghijEpl
sRcvXjx69EjpLKwHWkwzoMUQxBiVymJfffVV06ZNlc7CeqDFNANaDEGMgRbT
MGgxzYAWQxBjoMUE6N2797p16+jlQxuVWOzhw4f0gqPFrMbz589fvnxJLz5a
DBEHWkyAvn37durUiV4+tFGDxZKTkz09Pem9FBQtZjUiIyNHjBhBLz5aDOEj
75PdNv1wN8FSiy1btsze3t52f1pXDRbbtWtXgwYN6MVHi1mN4cOHf/rpp/Ti
o8UQPuZ4p7i4uKSkpLCwUJZoKsdSi/3nP/+BUn///ff0UqKKgharqKgoLS3V
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
H6cqHUM=
    "], {{0, 130.}, {578., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{578., 130.},
  PlotRange->{{0, 578.}, {0, 130.}}]], "Output",
 CellChangeTimes->{3.856910490095724*^9, 3.856910584392353*^9, 
  3.856911189986855*^9, 3.856911256344206*^9, 3.8569122202119923`*^9},
 CellLabel->"Out[98]=",
 CellID->740101484]
}, Open  ]],

Cell["Measuring third qubit", "CodeText",
 CellChangeTimes->{{3.8568287927481003`*^9, 3.856828808226709*^9}, {
  3.8569112204847527`*^9, 3.85691122847502*^9}},
 CellID->933550747],

Cell[BoxData[
 RowBox[{
  RowBox[{"finalnandalt", "=", 
   RowBox[{"qNANDalt", "/@", "statesnand"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.856910728975638*^9, 3.85691074166053*^9}, {
   3.856911270639092*^9, 3.8569112844636602`*^9}, 3.856911432882271*^9},
 CellLabel->"In[88]:=",
 CellID->1534322404],

Cell["\<\
Deleting repetitive probabilities and retaining unique keys for the alternate \
approach.\
\>", "CodeText",
 CellChangeTimes->{{3.856828810793725*^9, 3.85682887225996*^9}, {
  3.856911524266502*^9, 3.85691154923099*^9}},
 CellID->2088103467],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resultsnandalt", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Keys", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"#", "[", "\"\<Probabilities\>\"", "]"}], ",", "0"}], "]"}], 
      "]"}], "&"}], "/@", "finalnandalt"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.856910787252537*^9, 3.856910800346384*^9}},
 CellLabel->"In[79]:=",
 CellID->1181550487],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.856910802908166*^9},
 CellLabel->"Out[79]=",
 CellID->857179874]
}, Open  ]],

Cell["\<\
Truth table of Quantum version of NAND gate(alternate approach).\
\>", "CodeText",
 CellChangeTimes->{{3.856828938597994*^9, 3.856828945468927*^9}, {
  3.856869306944278*^9, 3.856869307245216*^9}, {3.856911753938394*^9, 
  3.8569117674893723`*^9}},
 CellID->2059653567],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"QuantumState", "[", "#", "]"}], "[", "\"\<Formula\>\"", 
           "]"}], "&"}], "/@", 
         RowBox[{"StringJoin", "@@@", 
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}], ",", "2"}], 
           "]"}]}]}], ",", "resultsnandalt"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<\!\(\*TemplateBox[{
RowBox[{\"A\", \",\", \"B\"}]},\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{
OverscriptBox[\"AB\", \"_\"]},\"Ket\"]\)\>\""}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"LightPurple", ",", "LightGreen"}], "}"}], "}"}]}], "}"}]}]}],
   "]"}]], "Input",
 CellChangeTimes->{{3.85691165798411*^9, 3.856911676480021*^9}},
 CellLabel->"In[93]:=",
 CellID->1335564593],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*TemplateBox[{RowBox[{\\\"A\\\", \\\",\\\", \\\"B\\\"}]},\\\
\"Ket\\\"]\\)\"\>", "\<\"\\!\\(\\*TemplateBox[{OverscriptBox[\\\"AB\\\", \
\\\"_\\\"]},\\\"Ket\\\"]\\)\"\>"},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
        RGBColor[0.94, 0.88, 0.94], 
        RGBColor[0.88, 1, 0.88]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.856911659338408*^9, 3.856911677005458*^9}},
 CellLabel->"Out[93]=",
 CellID->1427473141]
}, Open  ]],

Cell["\<\
It is apparent that truth table of both the approach as Quantum counterpart \
of NAND gate are equal which verifies the equivalence of CNOT and combination \
of gates used in alternate approach.\
\>", "Text",
 CellChangeTimes->{{3.856911795906056*^9, 3.8569119140846043`*^9}},
 CellID->691332955]
}, Open  ]],

Cell[CellGroupData[{

Cell["NOR \[Rule] anti-Toffoli Gate", "Section",
 CellChangeTimes->{{3.856615155386527*^9, 3.856615173156804*^9}, {
  3.856615428866654*^9, 3.856615440904059*^9}, {3.8568716484381733`*^9, 
  3.856871654185068*^9}, {3.856872256889501*^9, 3.856872263095295*^9}, {
  3.856872497082554*^9, 3.856872506600779*^9}, {3.856873281566103*^9, 
  3.856873289088952*^9}},
 CellTags->"SectionHeader",
 CellID->727205604],

Cell["\<\
A NOR gate produces a HIGH output only if all its inputs are low, and LOW \
output otherwise.\
\>", "Text",
 CellChangeTimes->{{3.856912002519598*^9, 3.8569120660649357`*^9}},
 CellID->1389352049],

Cell["Truth table of classical NOR gate.", "CodeText",
 CellChangeTimes->{{3.856912090503508*^9, 3.8569121026603203`*^9}},
 CellID->943150004],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"nor", "=", 
   RowBox[{"Boole", "[", 
    RowBox[{"BooleanTable", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b", ",", 
        RowBox[{"Nor", "[", 
         RowBox[{"a", ",", "b"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}]}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Text", "@", 
  RowBox[{"Grid", "[", 
   RowBox[{
    RowBox[{"Prepend", "[", 
     RowBox[{"nor", ",", 
      RowBox[{"{", 
       RowBox[{
       "\"\<A\>\"", ",", "\"\<B\>\"", ",", 
        "\"\<\!\(\*OverscriptBox[\(A + B\), \(_\)]\)\>\""}], "}"}]}], "]"}], 
    ",", 
    RowBox[{"Background", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"None", ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Lighter", "[", 
          RowBox[{"Yellow", ",", ".9"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"White", ",", 
           RowBox[{"Lighter", "[", 
            RowBox[{
             RowBox[{"Blend", "[", 
              RowBox[{"{", 
               RowBox[{"Blue", ",", "Green"}], "}"}], "]"}], ",", ".8"}], 
            "]"}]}], "}"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Dividers", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", 
          RowBox[{"Lighter", "[", 
           RowBox[{"Gray", ",", ".5"}], "]"}], "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}], ",", 
         RowBox[{"{", "False", "}"}], ",", 
         RowBox[{"Darker", "[", 
          RowBox[{"Gray", ",", ".6"}], "]"}]}], "}"}]}], "}"}]}], ",", 
    RowBox[{"Alignment", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"Center", ",", "Center", ",", 
        RowBox[{"{", "Center", "}"}]}], "}"}], "}"}]}], ",", 
    RowBox[{"ItemSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", 
       RowBox[{"5", ",", "5", ",", "5"}], "}"}], "}"}]}], ",", 
    RowBox[{"Frame", "\[Rule]", 
     RowBox[{"Darker", "[", 
      RowBox[{"Gray", ",", ".6"}], "]"}]}], ",", 
    RowBox[{"ItemStyle", "\[Rule]", "14"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.8568691312568207`*^9, 3.856869174800956*^9}, {
  3.85687166186838*^9, 3.8568716637265472`*^9}, {3.856872270409206*^9, 
  3.8568722720919952`*^9}, {3.856872514479711*^9, 3.856872517264045*^9}, {
  3.856873319844008*^9, 3.85687333790418*^9}, {3.8568816365424623`*^9, 
  3.856881662210286*^9}},
 CellLabel->"In[47]:=",
 CellID->815151351],

Cell[BoxData[
 InterpretationBox[Cell[BoxData[
   FormBox[
    TagBox[GridBox[{
       {"\<\"A\"\>", "\<\"B\"\>", "\<\"\\!\\(\\*OverscriptBox[\\(A + B\\), \
\\(_\\)]\\)\"\>"},
       {"1", "1", "0"},
       {"1", "0", "0"},
       {"0", "1", "0"},
       {"0", "0", "1"}
      },
      AutoDelete->False,
      GridBoxAlignment->{"Columns" -> {Center, Center, {Center}}},
      GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {
          RGBColor[1., 1., 0.9], {
           GrayLevel[1], 
           RGBColor[0.8, 0.9, 0.9]}}},
      GridBoxDividers->{"Columns" -> {
          RGBColor[0.2, 0.2, 0.2], {
           RGBColor[0.75, 0.75, 0.75]}, 
          RGBColor[0.2, 0.2, 0.2]}, "Rows" -> {
          RGBColor[0.2, 0.2, 0.2], 
          RGBColor[0.2, 0.2, 0.2], {False}, 
          RGBColor[0.2, 0.2, 0.2]}},
      GridBoxFrame->{
       "ColumnsIndexed" -> {{{1, -1}, {1, -1}} -> RGBColor[0.2, 0.2, 0.2]}},
      GridBoxItemSize->{"Columns" -> {5, 5, 5}},
      GridBoxItemStyle->{"Columns" -> {{14}}, "Rows" -> {{14}}}],
     "Grid"], TextForm]], "InlineText"],
  Text[
   Grid[{{"A", "B", "\!\(\*OverscriptBox[\(A + B\), \(_\)]\)"}, {1, 1, 0}, {1,
      0, 0}, {0, 1, 0}, {0, 0, 1}}, Background -> {None, {
       RGBColor[1., 1., 0.9], {
        GrayLevel[1], 
        RGBColor[0.8, 0.9, 0.9]}}}, Dividers -> {{
       RGBColor[0.2, 0.2, 0.2], {
        RGBColor[0.75, 0.75, 0.75]}, 
       RGBColor[0.2, 0.2, 0.2]}, {
       RGBColor[0.2, 0.2, 0.2], 
       RGBColor[0.2, 0.2, 0.2], {False}, 
       RGBColor[0.2, 0.2, 0.2]}}, Alignment -> {{Center, Center, {Center}}}, 
    ItemSize -> {{5, 5, 5}}, Frame -> RGBColor[0.2, 0.2, 0.2], ItemStyle -> 
    14]]]], "Output",
 CellChangeTimes->{{3.856869158373537*^9, 3.85686917571425*^9}, 
   3.8568716676742887`*^9, 3.8568722741230288`*^9, 3.85687251778144*^9, 
   3.856873338678399*^9, 3.8568816655258923`*^9, 3.8569045817942677`*^9, 
   3.8569051752707243`*^9},
 CellLabel->"Out[48]=",
 CellID->437856226]
}, Open  ]],

Cell["\<\
Quantum counterpart of NOR gate is realized like OR gates' except \
initializing 3rd qubit as 0.\
\>", "Text",
 CellChangeTimes->{{3.856912289886917*^9, 3.856912371209692*^9}},
 CellID->1221621610],

Cell["Define circuit operator.", "CodeText",
 CellChangeTimes->{{3.856828696293359*^9, 3.856828704903023*^9}, 
   3.856912378483563*^9},
 CellID->1529982764],

Cell[BoxData[
 RowBox[{
  RowBox[{"qNOR", "=", 
   RowBox[{"QuantumCircuitOperator", "[", 
    RowBox[{"{", 
     RowBox[{"QuantumOperator", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"\"\<Controlled0\>\"", ",", "\"\<NOT\>\"", ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}]}], "}"}], ",", 
       RowBox[{"{", "3", "}"}]}], "]"}], "}"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
   3.856828409274955*^9, 3.856828411811714*^9}, 3.85682848669272*^9, {
   3.85687195807465*^9, 3.856871975412807*^9}, 3.85687209739187*^9, {
   3.85687213887805*^9, 3.856872152739169*^9}, {3.8568723077347803`*^9, 
   3.856872403168063*^9}, 3.856872703274955*^9, {3.856872946861409*^9, 
   3.856872975791581*^9}, {3.856873390296823*^9, 3.856873399721342*^9}},
 CellLabel->"In[49]:=",
 CellID->451125370],

Cell["Visualize it.", "CodeText",
 CellChangeTimes->{{3.856828707126808*^9, 3.85682871588899*^9}, 
   3.856912383140174*^9},
 CellID->1446819680],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qNOR", "[", 
  RowBox[{"\"\<Diagram\>\"", ",", 
   RowBox[{"\"\<WireLabels\>\"", "->", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<A\>\"", ",", "Left"}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<A\>\"", ",", "Right"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<B\>\"", ",", "Left"}], "]"}], ",", 
        RowBox[{"Placed", "[", 
         RowBox[{"\"\<B\>\"", ",", "Right"}], "]"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Placed", "[", 
         RowBox[{
         "\"\<\!\(\*TemplateBox[{\"0\"},\"Ket\"]\)\>\"", ",", "Left"}], "]"}],
         ",", 
        RowBox[{"Placed", "[", 
         RowBox[{
         "\"\<\!\(\*OverscriptBox[\(A + B\), \(_\)]\)\>\"", ",", "Right"}], 
         "]"}]}], "}"}]}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.856828616538381*^9, 3.856828678581092*^9}, {
   3.85687216602151*^9, 3.8568721698364143`*^9}, {3.8568724151423273`*^9, 
   3.856872444921348*^9}, 3.856872707903488*^9, {3.856872993197712*^9, 
   3.85687302598949*^9}, {3.85687310087715*^9, 3.856873128824596*^9}, {
   3.856873394334115*^9, 3.856873404287381*^9}, {3.8569121674908237`*^9, 
   3.856912172632756*^9}},
 CellLabel->"In[94]:=",
 CellID->741026779],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJztnQtQVVUXxwUREhREBHHABBMqsQiQQRKFNB5iFKGlFmhiwhRJFJI9pmlS
igJGsNIyJhKSMo1GMhtAE4gcGmgAMbAsHok8wkwcCOVl3z/3952537kPuXDP
Pfvi+s3YyDqPte49v7P23vdcwzn62YgY4wkTJiTegv9EbNx23/PPb3xp1TT8
8Eh84lOx8ZufXBG/dXPs5ucXRU9EMBt/fsWff//+D0EYGllZWQMDA3JXQfCF
XFZUVVWhkebl5ek/NcEtMlqxfv16pPb29tZ/aoJb5LKiq6vLzMxswnW+//57
PWcn+ERGK5KTk01NTY2N/10xrV69Wp+pdUJPT09xcfH+/fsLCwv/+usvucsZ
J8hlxeDgoKOj49atW5H03zX5xIktLS16yz5GcBfHxsZaWVktW7YsMjIyODh4
ypQp4eHh9fX1cpdm2MhoxaFDh4yMjBobG0tKSlh/TkxM1E/qMdLZ2YlqN2zY
cPnyZSF45cqVjIwMW1vb06dPy1iboSOjFUuXLl2xYgX7u5ubG1Kj4WAQ1E/2
UYPeOGfOnJiYGJVbc3Nz8ULIyVEjlxWnTp1CriNHjrAf33//fXY7vPPOO1Kn
HiMJCQlxcXEadkhJSQkKCtJbPeMJGa3YvHmzk5PT8PAw+xG3gKWlJVLPmzdP
CHLI0NCQjY1Ne3u7hn1QPwbuc+fO6a2qcYNcVmBBam5u7u3tvVMBV1dXdjsU
FBRIl3qMVFdXu7u733C3devWYemth3rGEzJakZaWhnX9Pf/P3XffzVLfd999
Ko/y8fGZwAFeXl43fIGYYcpdJtfgcuvKirGDUQ9tOSoqSnkT7g6Wvba2VqLs
Y4Q6pETIaMXBgwdx8rKyMuVNuIgs9RNPPCFF6rFDc0iJkMuKa9euLVy4cO7c
uSq39vf3W1tbIzVa9/nz53WeXSdglb127VoNO+zevZtW2VohlxVoL6mpqTiz
h4eHun18fX3Z7RAZGYn9dZhdV1y4cAHlZWVlqdyak5OD962urk7PVRkuMloR
FhYmTGtdXFxEnx5XVFRgSWVkZCTsY29v39vbq6vsOgROOjo6btu2TfSkJjk5
eQJ9Kq4l48YKeeno6BCeZUdERAQGBtKzbEJ2enp6jh8/DhUxJ6dv+xCcMGPG
DAzicldBEP+FhCS4goQkuIKEJLiChCS4goQkuIKEJLiChCS4goQkuIKEJLiC
hCS4goQkuIKEJLiChCS4goQkuIKEJLiChCS4goQkuIKEJLiChCS4goQkuIKE
JLiChCS4goQkuIKEJLiChCS4goQkuIKEJLiChCS4goQkuIKEJLiChCS4goQk
uIKEJLiChCS4goQkuIKEJLiChCS4goQkuIKEJLiChCS4goQkuIKEJLiChCS4
goQ0UPr7+8+ooqmpaWBgQO7qRg8JORZktKKxsXHNmjW2trYTlLCwsAgJCUlL
S2tubpa0BikgIceC7Fbg5Czd7NmzL168eOnSpfr6+tTUVDMzMwRRmOh3yvMP
CTl25LVi6tSpyLJw4ULFYFlZGSspKChIutRSQELqBBmtwBVUTg2cnZ0Rt7Ky
unbtmnTZdcWff/6ZmZkZHh5ubW0dHBz85ptvYtojd1EGjIxWqEvt5eXFbgf+
1zg5OTl4FdHR0fn5+RUVFQUFBc888wwiL7zwgkHcTRwioxUqU6O9mJiYII6e
I1FeXZGeno46sRIUxdEz8RJWrVolS1WGjoxWsNQeHh59fX2XL1+uqan58MMP
7ezsEJw+fXpra6t0qcdOYWGhk5NTW1ubyq39/f14FRkZGXquahwgoxUstTL3
3ntvV1eXdHl1gq+v75dffqlhB3ROe3v7q1ev6q2k8YGMVrDULi4u1dXVn376
aWJiYkBAgIWFBYKurq55eXmSZh8LeGdwtw4ODmrezcfHp7S0VD8ljRtktELl
bOHs2bOOjo7spsAaQfmoL7744j25wbvk7u5+wxf4+HXkLpZfPv/8c11ZoRPU
rad27drFUoeFhSkflZaWFic3Dz/8sHLZymzcuNHf31/uYvklJSVFV1boBHWp
v/32W5Z6/vz5EqUeI83NzQ4ODjf8YCcwMPDo0aP6KWncIKMV6lJnZ2ez1CEh
IRKlHiNQ0c3N7bvvvtOwT2dn57Rp03p6evRW1fhARivMzc1xfi8vL8UgrqCn
pydLnZWVJVHqsbNv3z5UqGFdg2F927Zt+ixpfCCXFVVVVez8pqamRUVFlZWV
H3/88aZNm5ycnFg8JiZmeHhYitS64tFHH128eHFvb68oPjQ0hHkOltj9/f2y
FGa4yGLFmTNnPDw82AfvImbNmrV8+fItW7YcO3ZMt0mlAAN3fHw8asY6q6Gh
obu7G4vBPXv2ODs7+/n50aNDrRg3VshObW1tbGzs7bffjpsaKkZGRtL7RvCA
kZHRzz//LHcVBPFfSEiCK0hIgitISIIrSEiCK0hIgitISIIrSEiCK0hIgitI
SIIrSEiCK0hIgitISIIrSEiCK0hIgitISIIrSEiCK0hIgitISIIrSEiCK0hI
gitISIIrSEiCK0hIgitISIIrSEiCK0hIgitISIIrSEiCK0hIgitISIIrSEiC
K0hIgitISIIrSEiCK0hIgitISIIrSEiCK0hIg+Onn376+uuv5a5CKkhIg+O1
11679dZb5a5CKkhIg4OEJLhCWyGDg4P37t0rXT26hYQ0OLQVMjQ01MfHR7p6
dAsJaXBoK2RmZiauckdHh3Ql6RAS0uDQVsiGhgbOf427IiiVhDQsVArZ1tZ2
8ODByspKlb9g2tHRMSwsTC/VjYaqqqpXX33Vw8NjypQp7NeO33nnnQkJCTft
byhG97iTe3bu3MmqFQn5448/uru729vbR0VFTZ8+febMmdnZ2aIXGB0dPXny
5L6+Pv29pyPjl19+Wb16tZOTU1JS0g8//NDT0wMhS0tL6+rqtm/fDkWXLFlS
Xl4ud5n6BleqSw1Hjx5tampSt1Wf9Pb2smoVhWxvb3dwcICHra2t+BEXdOnS
pSYmJqLecuDAAVzogoICPb+xmjl16hQqT0lJGRwcFIKos6KiQvgRNxfutQ8+
+ECOArnjzJkzkyZNKi4uljQLLkdAQAA62zQF7OzsFi1atH79+q+++kq0v6KQ
fn5+uIK4psLWb775BhGc4cKFC0IQfzc2Nn7yySclfSFagTsddZ48eVIUFwkJ
mpubLS0tDWUOLCnBwcF4fzIyMvSQizUx4Onpefbs2RMnTsTFxbHIjh07FPcU
hMS4xnbA/sJWzCHnzZuH4Hvvvad4lJeXF1qNyhmm/sGdjjuuqKhIeZOykP9c
dxLxwsJCvVTHKWhN7HJv2rRJD+kEId99910WEdSysLDo7+8X9hSExEIAW7EQ
EJ1q3bp1iKPBKgZfeuklBDFPk/h1jIjQ0NBdu3ap3KRSSHD8+PHbbrtNcXC/
qbh69SpePjNEdGVvCERS9GeEYDxl6X799VchuGXLFhZUFEkQcsWKFdh0zz33
iE7FRMVkQ7EflpSUIPjyyy9rW5jOKSsru+OOO4aGhlRuVSckePDBB/fs2SNl
afyCWdmsWbMiIyPx/kydOlWrY3Nzc3EUZuxaHQXHcBTuAsXg8uXLmZCdnZ1C
UBASKmLTsmXLRKdKT09nR/3xxx9CEPcIOu2CBQu0qkoKnn32WdEkRBENQubn
5wcGBkpWF7+0tbVhHNy3bx9GT3Zlf//995EfjgNxSG1t7cgPwZyKJcK8UQiW
l5ffcsstCAYFBSnuLAiJWwZbH3jgAdHZ0EbY2WpqahTjK1euRLCpqWnkhUmB
k5OTho++NQiJewrXpaenR7LSOAWN0dvbG+MdG+YAloQjP3wUQmZmZrJER44c
6evr++233xAxNzefOHHiqlWrhA98GIKQc+bMwSEPPfSQ6Gy7d+9mZ2tpaVGM
Y9qGIM488sJ0DuZCuMs0rK00CPnP9UFBdJeNe06ePGlkZMQ+jujq6mJXNjU1
deRnGIWQbDYoAtap7GaCkEuWLMFu999/v2iHt956iy12RNedPUNk+69du1aW
j/fnzp3LnsWoA1tNTEzUbcWlmTlzpiyVywIm27h/LS0thQh6FN4iKysrIRIR
EaFbIdE00AxxiL+/P+YGODA7O5sNx7Nnz25ublYn5OOPP4590MxFO7zyyisq
49XV1UJHxWkb5ADdDy/2iHqwFW+guq2urq45OTmyVC4L27dvxyULCQl54n9A
TkTmz58v7KPctWDIAgWYS2gFisHPPvtMnZDHjh1jLfHtt98WgtCSBVGMOiGT
k5MnXP8MXLRDVFQU4hs2bBDFWef86KOP1FWiB9C0Z8yYgaFH3Q7YqviRvvJW
xfXd+Ka7u9vW1hYriKcU8PDwwEWcPHny8PCwugN37tx5vwJos6xBKQY1PLbb
unUrc0/UVG1sbBBExxClFoTs6OhgY1xdXZ3iDqwA5UcbWI8bGxsrLr1l4ZFH
HtFwU2gQEt3Vzc1Nsrq4IyEhAUKKFnHCQhsLjRGeR9sh+6677sL+yo9RWHOG
Qn///bdiXPHR4caNG7EPxm5ha2NjIyZaONuVK1cUj8LKyMzMzNfXd4RVSQfe
Hw1fPdIg5IsvvpiUlCRZXXyBJoO5dHp6uiheXFzMhDx8+PAIT6WVkO3t7ez8
GGcV45WVlSyOFi06RFFINEk0DUx08/Pz0UihLtogflT+WIA941Z86i0XAwMD
zs7OJSUlKreqExKza2tr65tkvMalXLx4sZ2dnfIXtFpaWpgYr7/++gjPppWQ
e/fuZefPzc0VgvDKx8eHxffv3y86RPT1s4sXL2KdgpEd7R1TC0z74Z5yIvR/
nK2+vn6Er0JSPvnkE6zXRJ2foVJIXCA0VR4eM+mBoaEh9px35cqVylvLy8uZ
GIsWLdIwjVRk5EJiVGWfJYLo6Ojz58+fPn06Ly+PPcLGCKvcsf9R8wVdtJ2a
mpq2tjZ1ubAuEz0GkpfnnnsO947yp9zKQuJtxx0XGho6wvff0ImIiGBKYMgO
CAhQ3BQeHs4mcgxMzEbyQJA9OhQtNJQpLS11cHAQffaI0Ratw8/PDysddXaN
4p/Btra24uRoklodJTUxMTGenp6ipzYiITEnWbBggYuLy037tQr+GYWQWNVC
yBMnTkhU0qjBmtHGxiY+Pl749oggZENDw44dOzBvTExMvEl6o4EyCiHXrFmD
K8tnk7l06RKWz5hRODo6BgcHm5qaBgYGYjTHj7GxsefOnZO7QOIGaCsk2gu6
0GOPPSZdSTqhsbGxqKgoKSnp8OHDnCy+iJGgrZBVVVUYrw8cOCBdScTNjLZC
vvHGG5MmTeru7pauJOJmRlsh/f39lb8RRBC6Qlsh4+LilP/pIkHoivH9v+Mj
DI5Dhw49/fTTcldBEATBF/8B4CBbqQ==
    "], {{0, 158.}, {219., 0}}, {0, 255},
    ColorFunction->RGBColor,
    ImageResolution->{72., 72.},
    SmoothingQuality->"High"],
   BoxForm`ImageTag["Byte", ColorSpace -> "RGB", Interleaving -> True],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->Automatic,
  ImageSizeRaw->{219., 158.},
  PlotRange->{{0, 219.}, {0, 158.}}]], "Output",
 CellChangeTimes->{
  3.856828624621269*^9, 3.856828678969043*^9, 3.856828957763734*^9, 
   3.8568463896167583`*^9, {3.8568719670117493`*^9, 3.856871979422599*^9}, 
   3.856872101889352*^9, {3.8568721567066383`*^9, 3.856872170961132*^9}, 
   3.8568724071014643`*^9, {3.8568724393659286`*^9, 3.856872445861195*^9}, 
   3.8568727088865347`*^9, 3.8568729835394497`*^9, 3.856873131776992*^9, 
   3.856873406178937*^9, 3.856904581831747*^9, 3.856905175324356*^9, 
   3.856912173624457*^9},
 CellLabel->"Out[94]=",
 CellID->660358164]
}, Open  ]],

Cell["All combinations of A and B initializing 3rd qubit as 0.", "CodeText",
 CellChangeTimes->{{3.8568287476961823`*^9, 3.856828759869239*^9}, {
  3.856912393983955*^9, 3.856912414654088*^9}},
 CellID->997538090],

Cell[BoxData[
 RowBox[{
  RowBox[{"statesnor", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"QuantumState", "[", 
      RowBox[{"StringJoin", "[", 
       RowBox[{"#", ",", "\"\<0\>\""}], "]"}], "]"}], "&"}], "/@", 
    RowBox[{"Tuples", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}], ",", "2"}], "]"}]}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
  3.856828409274955*^9, 3.856828411811714*^9}, {3.85682848669272*^9, 
  3.856828491126009*^9}, {3.856872176308179*^9, 3.85687217655755*^9}, {
  3.856872450196806*^9, 3.8568724506022577`*^9}, {3.8568727133048983`*^9, 
  3.8568727139555902`*^9}, {3.856873172782796*^9, 3.856873173256551*^9}, {
  3.856873416597261*^9, 3.8568734179180098`*^9}, {3.856873489986929*^9, 
  3.8568734902760563`*^9}},
 CellLabel->"In[51]:=",
 CellID->217846501],

Cell[TextData[StyleBox["Visualize the states defined above.", "CodeText"]], \
"Text",
 CellChangeTimes->{{3.856828769384801*^9, 3.856828788702155*^9}, {
  3.856912471573359*^9, 3.8569124940908957`*^9}},
 CellID->2034007819],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"#", "[", "\"\<Formula\>\"", "]"}], "&"}], "/@", 
  "statesnor"}]], "Input",
 CellChangeTimes->{{3.856828494965972*^9, 3.856828501940291*^9}, {
  3.856872717664096*^9, 3.856872718310562*^9}, {3.8568734224614153`*^9, 
  3.856873424163221*^9}},
 CellLabel->"In[52]:=",
 CellID->1924720987],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[{0, 0, 0}, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[{0, 1, 0}, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1", "\[InvisibleSpace]", "0", "\[InvisibleSpace]", "0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[{1, 0, 0}, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1", "\[InvisibleSpace]", "1", "\[InvisibleSpace]", "0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[{1, 1, 0}, "Dual" -> False]]}], 
  "}"}]], "Output",
 CellChangeTimes->{3.856828502542555*^9, 3.8568289578213787`*^9, 
  3.856846389711813*^9, 3.8568721809771233`*^9, 3.856872454384273*^9, 
  3.856872718916563*^9, 3.856873176945121*^9, 3.856873424588832*^9, 
  3.856873492836461*^9, 3.856904581865367*^9, 3.8569051754124613`*^9},
 CellLabel->"Out[52]=",
 CellID->1058181841]
}, Open  ]],

Cell["Measuring 3rd qubit on all possible states.", "CodeText",
 CellChangeTimes->{{3.8568287927481003`*^9, 3.856828808226709*^9}, {
  3.85691252611343*^9, 3.856912573062702*^9}},
 CellID->907766736],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"finalnor", "=", 
  RowBox[{
   RowBox[{
    RowBox[{"QuantumMeasurementOperator", "[", 
     RowBox[{"{", "3", "}"}], "]"}], "[", "qNOR", "]"}], "/@", 
   "statesnor"}]}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
  3.856828409274955*^9, 3.856828411811714*^9}, {3.85682848669272*^9, 
  3.856828507064117*^9}, {3.856872721731992*^9, 3.8568727304737864`*^9}, {
  3.8568734294625807`*^9, 3.856873436412135*^9}, {3.85691250904642*^9, 
  3.8569125105454483`*^9}},
 CellLabel->"In[99]:=",
 CellID->1111703664],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    RowBox[{
     TagBox["QuantumMeasurement",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumMeasurement[
     Wolfram`QuantumFramework`QuantumMeasurementOperator[
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[Automatic, {16}, 0, {1, {{0, 1}, {{10}}}, {1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[0, Bold], "Eigenvalue 1"], {0, {1}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[1, Bold], "Eigenvalue 2"], {1, {2}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
          CircleTimes["Computational", 
            Superscript["\[Pi]", 
             Row[{}]]][
            "Controlled"["NOT", {}, {1, 2}]["000"]], 
          "ParameterSpec" -> {}|>]], {{0}, {1, 2, 3}}], {3}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumMeasurement",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumMeasurement[
     Wolfram`QuantumFramework`QuantumMeasurementOperator[
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[Automatic, {16}, 0, {1, {{0, 1}, {{3}}}, {1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[0, Bold], "Eigenvalue 1"], {0, {1}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[1, Bold], "Eigenvalue 2"], {1, {2}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
          CircleTimes["Computational", 
            Superscript["\[Pi]", 
             Row[{}]]][
            "Controlled"["NOT", {}, {1, 2}]["010"]], 
          "ParameterSpec" -> {}|>]], {{0}, {1, 2, 3}}], {3}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumMeasurement",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumMeasurement[
     Wolfram`QuantumFramework`QuantumMeasurementOperator[
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[Automatic, {16}, 0, {1, {{0, 1}, {{5}}}, {1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[0, Bold], "Eigenvalue 1"], {0, {1}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[1, Bold], "Eigenvalue 2"], {1, {2}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
          CircleTimes["Computational", 
            Superscript["\[Pi]", 
             Row[{}]]][
            "Controlled"["NOT", {}, {1, 2}]["100"]], 
          "ParameterSpec" -> {}|>]], {{0}, {1, 2, 3}}], {3}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False], ",", 
   InterpretationBox[
    RowBox[{
     TagBox["QuantumMeasurement",
      "SummaryHead"], "[", 
     DynamicModuleBox[{Typeset`open$$ = False, Typeset`embedState$$ = 
      "Ready"}, 
      TemplateBox[{
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxOpener"]],
                 ButtonFunction :> (Typeset`open$$ = True), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource["FEBitmaps", "SummaryBoxCloser"]],
                 ButtonFunction :> (Typeset`open$$ = False), Appearance -> 
                None, BaseStyle -> {}, Evaluator -> Automatic, Method -> 
                "Preemptive"], Alignment -> {Center, Center}, ImageSize -> 
               Dynamic[{
                 Automatic, 
                  3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                   Magnification])}]], 
              GraphicsBox[{{
                 Opacity[0], 
                 
                 PointBox[{{-0.8428550619082302, 0.}, {3.8048069919883467`, 
                  0.}}]}, {{}, {
                  Directive[
                   EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                   RGBColor[0.982864, 0.7431472, 0.3262672]], {{
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{0.5487982520029133, 0.}, {
                    1.4512017479970867`, 1.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 1.]& , 
                    TagBoxNote -> "1."], 
                    StyleBox["1.`", {}, StripOnInput -> False]], Annotation[#, 
                    Style[1., {}], "Tooltip"]& ]}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Thickness[Small], 
                    Opacity[0.6859999999999999]]], 
                    RGBColor[0.982864, 0.7431472, 0.3262672]], 
                    TagBox[
                    TooltipBox[
                    TagBox[
                    TagBox[
                    DynamicBox[{
                    FEPrivate`If[
                    CurrentValue["MouseOver"], 
                    EdgeForm[{
                    GrayLevel[0.5], 
                    AbsoluteThickness[1.5], 
                    Opacity[0.66]}], {}, {}], 
                    
                    RectangleBox[{1.5487982520029133`, 0.}, {
                    2.4512017479970867`, 0.}, "RoundingRadius" -> 0]}], 
                    "DelayedMouseEffectStyle"], StatusArea[#, 0]& , 
                    TagBoxNote -> "0"], 
                    StyleBox["0", {}, StripOnInput -> False]], Annotation[#, 
                    Style[0, {}], 
                    "Tooltip"]& ]}}}, {}, {}}, {}, {}, {}, {}, {}}, {
               ImageSize -> 
                Dynamic[{
                  Automatic, 
                   3.5 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}], DisplayFunction -> Identity, 
                AspectRatio -> NCache[GoldenRatio^(-1), 0.6180339887498948], 
                Axes -> {False, False}, AxesLabel -> {None, None}, 
                AxesOrigin -> {-0.8428550619082302, 0.}, 
                CoordinatesToolOptions -> {"DisplayFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    Identity[
                    Part[#, 1]], 
                    Identity[
                    Part[#, 2]]}& )}, Frame -> {{True, False}, {True, False}},
                 FrameLabel -> {{None, None}, {None, None}}, 
                FrameTicks -> {{None, None}, {None, None}}, 
                GridLines -> {None, None}, GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.4]], PlotRange -> {{All, All}, {All, All}},
                 PlotRangePadding -> {{
                   Scaled[0.02], 
                   Scaled[0.02]}, {None, 
                   Scaled[0.05]}}, Ticks -> {None, Automatic}}], 
              GridBox[{{
                 RowBox[{
                   TagBox["\"Target: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    RowBox[{"{", "3", "}"}], "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox[
                   "\"Measurement Outcomes: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox["2", "SummaryItem"]}]}, {
                 RowBox[{
                   TagBox["\"Entropy: \"", "SummaryItemAnnotation"], 
                   "\[InvisibleSpace]", 
                   TagBox[
                    
                    TemplateBox[{"0.`", "\"b\"", "bits", "\"Bits\""}, 
                    "Quantity", SyntaxForm -> Mod], "SummaryItem"]}]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, AutoDelete -> 
               False, GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}, 
               BaseStyle -> {
                ShowStringCharacters -> False, NumberMarks -> False, 
                 PrintPrecision -> 3, ShowSyntaxStyles -> False}]}}, 
            GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
            AutoDelete -> False, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            BaselinePosition -> {1, 1}]}, 
         Dynamic[Typeset`open$$], ImageSize -> Automatic]},
       "SummaryPanel"],
      DynamicModuleValues:>{}], "]"}],
    Wolfram`QuantumFramework`QuantumMeasurement[
     Wolfram`QuantumFramework`QuantumMeasurementOperator[
      Wolfram`QuantumFramework`QuantumOperator[
       Wolfram`QuantumFramework`QuantumState[
        SparseArray[Automatic, {16}, 0, {1, {{0, 1}, {{7}}}, {1}}], 
        Wolfram`QuantumFramework`QuantumBasis[<|
         "Input" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 2} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[0, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[1, "Dual" -> True], 3} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Output" -> Wolfram`QuantumFramework`QuditBasis[<|{
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[0, Bold], "Eigenvalue 1"], {0, {1}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{1}}}, {1}}], {
               Wolfram`QuantumFramework`QuditName[
                Interpretation[
                 Tooltip[
                  Style[1, Bold], "Eigenvalue 2"], {1, {2}}], "Dual" -> 
                False], 1} -> 
             SparseArray[Automatic, {2}, 0, {1, {{0, 1}, {{2}}}, {1}}]|>], 
          "Picture" -> "Schr\[ODoubleDot]dinger", "Label" -> 
          CircleTimes["Computational", 
            Superscript["\[Pi]", 
             Row[{}]]][
            "Controlled"["NOT", {}, {1, 2}]["110"]], 
          "ParameterSpec" -> {}|>]], {{0}, {1, 2, 3}}], {3}]],
    Editable->False,
    SelectWithContents->True,
    Selectable->False]}], "}"}]], "Output",
 CellChangeTimes->{3.856828958005897*^9, 3.85684639534524*^9, 
  3.8568721864057827`*^9, 3.856872463037524*^9, 3.856872732084434*^9, 
  3.856873184874937*^9, 3.856873437403805*^9, 3.856873496250888*^9, 
  3.85690458190022*^9, 3.856905175927009*^9, 3.856912512658207*^9},
 CellLabel->"Out[99]=",
 CellID->241137857]
}, Open  ]],

Cell["\<\
Deleting cases with repetitive probabilities and retaining unique keys.\
\>", "CodeText",
 CellChangeTimes->{{3.856828810793725*^9, 3.85682887225996*^9}, {
  3.8569125799342117`*^9, 3.856912610517778*^9}},
 CellID->71325809],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"resultsnor", "=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Keys", "[", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{
        RowBox[{"#", "[", "\"\<Probabilities\>\"", "]"}], ",", "0"}], "]"}], 
      "]"}], "&"}], "/@", "finalnor"}], "//", "Flatten"}]}]], "Input",
 CellChangeTimes->{{3.8568283000961246`*^9, 3.856828300102429*^9}, {
  3.856828409274955*^9, 3.856828411811714*^9}, {3.85682848669272*^9, 
  3.856828505792939*^9}, {3.856872735448701*^9, 3.8568727402910223`*^9}, {
  3.856873441217417*^9, 3.85687344771096*^9}},
 CellLabel->"In[54]:=",
 CellID->476996837],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"0"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]], ",", 
   InterpretationBox[
    TemplateBox[{
      RowBox[{"1"}]},
     "Ket"],
    Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.856828301204431*^9, 3.856828958060594*^9, 3.856846395821104*^9, 
   3.856872193594228*^9, 3.8568724657790003`*^9, {3.856872736826066*^9, 
   3.856872740866646*^9}, 3.856873189702972*^9, 3.856873449033681*^9, 
   3.856873498921554*^9, 3.856904581980784*^9, 3.856905176014859*^9},
 CellLabel->"Out[54]=",
 CellID->1757508403]
}, Open  ]],

Cell["Visualize the truth table.", "CodeText",
 CellChangeTimes->{{3.856828938597994*^9, 3.856828945468927*^9}, {
   3.856869306944278*^9, 3.856869307245216*^9}, 3.856912618824304*^9},
 CellID->1911832537],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{
   RowBox[{"Prepend", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"QuantumState", "[", "#", "]"}], "[", "\"\<Formula\>\"", 
           "]"}], "&"}], "/@", 
         RowBox[{"StringJoin", "@@@", 
          RowBox[{"Tuples", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"\"\<0\>\"", ",", "\"\<1\>\""}], "}"}], ",", "2"}], 
           "]"}]}]}], ",", "resultsnor"}], "}"}], "]"}], ",", 
     RowBox[{"{", 
      RowBox[{"\"\<\!\(\*TemplateBox[{
RowBox[{\"A\", \",\", \"B\"}]},\"Ket\"]\)\>\"", ",", "\"\<\!\(\*TemplateBox[{
OverscriptBox[
RowBox[{\"A\", \"+\", \"B\"}], \"_\"]},\"Ket\"]\)\>\""}], "}"}]}], "]"}], ",", 
   RowBox[{"Frame", "->", "All"}], ",", 
   RowBox[{"Background", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"None", ",", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"LightRed", ",", "LightBlue"}], "}"}], "}"}]}], "}"}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.856828400023141*^9, 3.8568284612675133`*^9}, {
   3.856828549164446*^9, 3.8568285525052633`*^9}, {3.856828597606731*^9, 
   3.856828601935616*^9}, 3.856846541640149*^9, 3.856846584418779*^9, 
   3.8568468241741*^9, {3.8568693204619007`*^9, 3.856869321188118*^9}, 
   3.856872203672542*^9, {3.856872470802052*^9, 3.856872474021697*^9}, {
   3.856872746469124*^9, 3.8568727473336554`*^9}, 3.856873210002681*^9, 
   3.8568734551318293`*^9, {3.8568735105642853`*^9, 3.85687351166989*^9}, {
   3.856873961919993*^9, 3.85687398531868*^9}, {3.856874077423221*^9, 
   3.8568741822976723`*^9}, {3.856909201662125*^9, 3.856909202026265*^9}},
 CellLabel->"In[71]:=",
 CellID->1519122945],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"\\!\\(\\*TemplateBox[{RowBox[{\\\"A\\\", \\\",\\\", \\\"B\\\"}]},\\\
\"Ket\\\"]\\)\"\>", \
"\<\"\\!\\(\\*TemplateBox[{OverscriptBox[RowBox[{\\\"A\\\", \\\"+\\\", \
\\\"B\\\"}], \\\"_\\\"]},\\\"Ket\\\"]\\)\"\>"},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{0, 0}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{0, 1}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{1, 0}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"0"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[0, "Dual" -> False]]},
    {
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1", "\[InvisibleSpace]", "1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[{1, 1}, "Dual" -> False]], 
     InterpretationBox[
      TemplateBox[{
        RowBox[{"1"}]},
       "Ket"],
      Wolfram`QuantumFramework`QuditName[1, "Dual" -> False]]}
   },
   AutoDelete->False,
   GridBoxBackground->{"Columns" -> {{None}}, "Rows" -> {{
        RGBColor[1, 0.85, 0.85], 
        RGBColor[0.87, 0.94, 1]}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.8568739863327713`*^9, 3.856874104147995*^9, 
  3.85687418380455*^9, 3.856904582000703*^9, 3.856905176115192*^9, 
  3.856909202562379*^9},
 CellLabel->"Out[71]=",
 CellID->1010054154]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1012.5, 501.75},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{
 "ResourceType" -> "ComputationalEssay", "ResourceCreateNotebook" -> True, 
  "TemplateVersion" -> <||>, "CreationTimestamp" -> 
  3.8338901164240208`17.3362146505151*^9, "UpdatedTimestamp" -> 
  3.8338901164245208`17.336214650515153*^9, "CompatibilityTest" -> 
  HoldComplete[
    BinaryDeserialize[
     ByteArray[{56, 67, 58, 120, 156, 133, 143, 205, 78, 131, 64, 20, 133, 
      163, 173, 110, 116, 213, 165, 79, 224, 6, 70, 11, 105, 138, 59, 197, 
      198, 184, 193, 70, 92, 184, 100, 24, 238, 164, 83, 7, 46, 153, 123, 41, 
      229, 237, 29, 140, 186, 193, 196, 245, 249, 249, 206, 209, 115, 90, 164,
       88, 183, 216, 53, 213, 230, 216, 58, 32, 50, 216, 232, 19, 58, 203, 0, 
      42, 202, 175, 95, 129, 176, 115, 10, 242, 129, 24, 234, 212, 26, 104, 
      184, 120, 4, 109, 26, 195, 222, 153, 33, 67, 137, 248, 81, 232, 83, 154,
       229, 192, 62, 25, 252, 25, 217, 58, 115, 144, 12, 133, 69, 89, 253, 24,
       222, 134, 22, 124, 238, 242, 222, 50, 184, 70, 178, 57, 0, 229, 87, 
      227, 156, 142, 229, 216, 46, 237, 134, 72, 14, 191, 133, 139, 169, 70, 
      243, 172, 179, 214, 99, 207, 159, 253, 11, 55, 14, 184, 72, 45, 118, 
      213, 75, 185, 7, 197, 249, 251, 142, 185, 165, 59, 33, 250, 190, 15, 
      123, 180, 218, 201, 90, 141, 122, 168, 176, 22, 88, 238, 133, 251, 110, 
      167, 175, 185, 98, 138, 72, 177, 97, 127, 65, 248, 215, 217, 195, 86, 
      178, 218, 133, 253, 81, 123, 208, 236, 9, 38, 188, 205, 191, 188, 106, 
      149, 68, 55, 75, 121, 27, 64, 164, 203, 32, 6, 41, 131, 36, 134, 117, 
      160, 228, 58, 74, 226, 74, 173, 202, 104, 249, 9, 89, 192, 149, 140}]]],
   "ToolsOpen" -> True, "StatusMessage" -> "", "TryRealOnly" -> False},
CreateCellID->True,
FrontEndVersion->"13.0 for Microsoft Windows (64-bit) (December 6, 2021)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Examples"->{
  Cell[561, 20, 908, 22, 70, "Text",ExpressionUUID->"fe27c231-dfad-4a60-b898-3f3eb40d23de",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Your Essay Title"->{
  Cell[561, 20, 908, 22, 70, "Text",ExpressionUUID->"fe27c231-dfad-4a60-b898-3f3eb40d23de",
   CellTags->{"Examples", "Your Essay Title"},
   CellID->805710577]},
 "Abstract"->{
  Cell[1472, 44, 694, 14, 70, "Abstract",ExpressionUUID->"9e5863aa-b788-45f2-82de-e527111bc293",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "TemplateCell"->{
  Cell[1472, 44, 694, 14, 70, "Abstract",ExpressionUUID->"9e5863aa-b788-45f2-82de-e527111bc293",
   CellTags->{"Abstract", "TemplateCell"},
   CellID->587432573]},
 "SectionHeader"->{
  Cell[2904, 81, 151, 3, 70, "Section",ExpressionUUID->"9f864859-e367-4731-b826-130fa7af7314",
   CellTags->"SectionHeader",
   CellID->453852445],
  Cell[15119, 421, 207, 4, 70, "Section",ExpressionUUID->"489eae7d-4848-4520-8cb2-afe5959e79f2",
   CellTags->"SectionHeader",
   CellID->1693717104],
  Cell[37358, 1007, 308, 5, 70, "Section",ExpressionUUID->"d80d2401-d60a-4eb9-86e1-03a65e269b3f",
   CellTags->"SectionHeader",
   CellID->1127494243],
  Cell[62506, 1624, 301, 5, 70, "Section",ExpressionUUID->"d6414686-f612-4c09-a318-e02c5a052aad",
   CellTags->"SectionHeader",
   CellID->1704509078],
  Cell[145724, 3479, 353, 6, 70, "Section",ExpressionUUID->"a43d1a12-24f9-44c4-a1ae-d560ffe54b64",
   CellTags->"SectionHeader",
   CellID->249898406],
  Cell[188729, 4518, 406, 7, 70, "Section",ExpressionUUID->"da91ef4f-89cc-4261-8a3f-3954932859c9",
   CellTags->"SectionHeader",
   CellID->727205604]},
 "ExampleTopicSentence"->{
  Cell[3058, 86, 234, 4, 70, "Text",ExpressionUUID->"40427177-f665-4e66-a051-1874f8f1566e",
   CellTags->"ExampleTopicSentence",
   CellID->816667160]},
 "ExampleCodeText"->{
  Cell[3295, 92, 222, 4, 70, "CodeText",ExpressionUUID->"84fa4369-6e46-4e75-8fb5-706dca63acff",
   CellTags->"ExampleCodeText",
   CellID->66178570]},
 "ExampleInput"->{
  Cell[3542, 100, 2638, 73, 70, "Input",ExpressionUUID->"a1c45cc6-da63-495a-ba8d-1e882237cd2c",
   CellTags->"ExampleInput",
   CellID->844129532],
  Cell[6183, 175, 1857, 46, 70, "Output",ExpressionUUID->"3c7ef83e-cec2-4bd8-8cb6-417d39274744",
   CellTags->"ExampleInput",
   CellID->1735815612]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Examples", 272613, 6390},
 {"Your Essay Title", 272799, 6394},
 {"Abstract", 272977, 6398},
 {"TemplateCell", 273160, 6402},
 {"SectionHeader", 273344, 6406},
 {"ExampleTopicSentence", 274279, 6425},
 {"ExampleCodeText", 274454, 6429},
 {"ExampleInput", 274624, 6433}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[561, 20, 908, 22, 70, "Text",ExpressionUUID->"fe27c231-dfad-4a60-b898-3f3eb40d23de",
 CellTags->{"Examples", "Your Essay Title"},
 CellID->805710577],
Cell[1472, 44, 694, 14, 70, "Abstract",ExpressionUUID->"9e5863aa-b788-45f2-82de-e527111bc293",
 CellTags->{"Abstract", "TemplateCell"},
 CellID->587432573],
Cell[CellGroupData[{
Cell[2191, 62, 117, 2, 70, "Section",ExpressionUUID->"24819168-ca80-4fbd-a289-2c99a9a040d0",
 CellID->623714440],
Cell[2311, 66, 556, 10, 70, "Text",ExpressionUUID->"df9d8411-f016-42f9-8c11-1f902722a029",
 CellID->1497242481]
}, Open  ]],
Cell[CellGroupData[{
Cell[2904, 81, 151, 3, 70, "Section",ExpressionUUID->"9f864859-e367-4731-b826-130fa7af7314",
 CellTags->"SectionHeader",
 CellID->453852445],
Cell[3058, 86, 234, 4, 70, "Text",ExpressionUUID->"40427177-f665-4e66-a051-1874f8f1566e",
 CellTags->"ExampleTopicSentence",
 CellID->816667160],
Cell[3295, 92, 222, 4, 70, "CodeText",ExpressionUUID->"84fa4369-6e46-4e75-8fb5-706dca63acff",
 CellTags->"ExampleCodeText",
 CellID->66178570],
Cell[CellGroupData[{
Cell[3542, 100, 2638, 73, 70, "Input",ExpressionUUID->"a1c45cc6-da63-495a-ba8d-1e882237cd2c",
 CellTags->"ExampleInput",
 CellID->844129532],
Cell[6183, 175, 1857, 46, 70, "Output",ExpressionUUID->"3c7ef83e-cec2-4bd8-8cb6-417d39274744",
 CellTags->"ExampleInput",
 CellID->1735815612]
}, Open  ]],
Cell[8055, 224, 301, 7, 70, "CodeText",ExpressionUUID->"81dc36b3-53ac-4319-9243-c12ebe2469bd",
 CellID->1516637261],
Cell[CellGroupData[{
Cell[8381, 235, 746, 21, 70, "Input",ExpressionUUID->"c4e6d6b7-0c56-4b7a-90f3-903702d36c43",
 CellID->954032184],
Cell[9130, 258, 2501, 48, 70, "Output",ExpressionUUID->"6609d69c-a4bf-45fd-8037-d1b8a066a93b",
 CellID->1448491957]
}, Open  ]],
Cell[11646, 309, 159, 2, 70, "CodeText",ExpressionUUID->"80b17699-3dbd-4086-afb4-9a11e49b9665",
 CellID->1034899575],
Cell[11808, 313, 394, 12, 70, "Input",ExpressionUUID->"325484d4-91bc-4dd8-b755-0d35109926a1",
 CellID->1953541672],
Cell[12205, 327, 219, 4, 70, "CodeText",ExpressionUUID->"b80f1b1e-fffb-4890-ba6c-61335daa14b6",
 CellID->718620660],
Cell[CellGroupData[{
Cell[12449, 335, 770, 22, 70, "Input",ExpressionUUID->"def63fb5-b5ce-4321-a291-25dd1100ec86",
 CellID->468678722],
Cell[13222, 359, 1603, 49, 70, "Output",ExpressionUUID->"bc6e09cd-d694-4ae5-997e-b8870a15784b",
 CellID->748285312]
}, Open  ]],
Cell[14840, 411, 242, 5, 70, "Text",ExpressionUUID->"14fddc9b-ddc3-4929-83f9-f2fbdad95d2a",
 CellID->658266674]
}, Open  ]],
Cell[CellGroupData[{
Cell[15119, 421, 207, 4, 70, "Section",ExpressionUUID->"489eae7d-4848-4520-8cb2-afe5959e79f2",
 CellTags->"SectionHeader",
 CellID->1693717104],
Cell[15329, 427, 303, 7, 70, "Text",ExpressionUUID->"b7c97672-1d3f-47ac-90bc-af8d9d7ce8c4",
 CellID->1915562970],
Cell[15635, 436, 198, 3, 70, "CodeText",ExpressionUUID->"2eac6158-1447-45f3-9fea-b202c0eb0dd9",
 CellID->431849719],
Cell[CellGroupData[{
Cell[15858, 443, 2543, 73, 70, "Input",ExpressionUUID->"3d78cebd-70da-4486-bcd6-6ffde13bde21",
 CellID->1847574853],
Cell[18404, 518, 1775, 45, 70, "Output",ExpressionUUID->"0ab80ddc-c506-4cc5-a5d4-da46d87c1e39",
 CellID->941849523]
}, Open  ]],
Cell[20194, 566, 129, 2, 70, "CodeText",ExpressionUUID->"939d259a-bbcb-440f-a152-27fbdbb5fc82",
 CellID->230718633],
Cell[20326, 570, 391, 10, 70, "Input",ExpressionUUID->"bf6d1914-0487-4207-84a3-354eeba83549",
 CellID->1480081996],
Cell[20720, 582, 118, 2, 70, "CodeText",ExpressionUUID->"72c7e686-9cca-4f2f-8ab2-9667cb940509",
 CellID->1435023571],
Cell[CellGroupData[{
Cell[20863, 588, 1065, 30, 70, "Input",ExpressionUUID->"f0f827f2-2a86-44b2-ba17-30569e811cd1",
 CellID->52318340],
Cell[21931, 620, 6758, 118, 70, "Output",ExpressionUUID->"2a0b4755-a5b2-42db-9531-3c604301e07c",
 CellID->929698907]
}, Open  ]],
Cell[28704, 741, 165, 2, 70, "CodeText",ExpressionUUID->"43fcf951-dca5-400a-bc55-ce1682988882",
 CellID->1552463474],
Cell[28872, 745, 580, 17, 70, "Input",ExpressionUUID->"eb3af204-7db6-40f5-bb38-0c5f0ad60b08",
 CellID->327296468],
Cell[29455, 764, 207, 3, 70, "CodeText",ExpressionUUID->"5058e2d0-75c0-43ff-a2ab-433448256799",
 CellID->1166117709],
Cell[CellGroupData[{
Cell[29687, 771, 230, 7, 70, "Input",ExpressionUUID->"d88dc376-15cc-4122-a9d7-989c257e4ea5",
 CellID->1004572641],
Cell[29920, 780, 1043, 27, 70, "Output",ExpressionUUID->"d954867d-8a14-4335-89f3-7ccb357c0a24",
 CellID->613435915]
}, Open  ]],
Cell[30978, 810, 195, 3, 70, "CodeText",ExpressionUUID->"f57dec2c-8927-496e-8725-ef38ceb90536",
 CellID->485930448],
Cell[31176, 815, 455, 12, 70, "Input",ExpressionUUID->"3ee80b27-d662-4a25-9a8c-4880e25fc302",
 CellID->152729995],
Cell[31634, 829, 227, 5, 70, "CodeText",ExpressionUUID->"7a892362-1d3a-4606-bfc1-20ea7d14e334",
 CellID->1557820800],
Cell[CellGroupData[{
Cell[31886, 838, 508, 14, 70, "Input",ExpressionUUID->"190b1465-a88a-479c-8c3f-031854655cd6",
 CellID->173561376],
Cell[32397, 854, 806, 27, 70, "Output",ExpressionUUID->"5f59784a-df27-4323-bac7-4b89e40b6730",
 CellID->2095917805]
}, Open  ]],
Cell[33218, 884, 255, 4, 70, "CodeText",ExpressionUUID->"5a0e2ffd-28ae-41a1-a03c-ae7575e4646a",
 CellID->575522684],
Cell[CellGroupData[{
Cell[33498, 892, 1454, 38, 70, "Input",ExpressionUUID->"3e4fa6fd-6d9e-410c-8f76-f00352854f72",
 CellID->543403900],
Cell[34955, 932, 2137, 62, 70, "Output",ExpressionUUID->"2ea99a0e-f990-43fa-8f4e-22ec2364f450",
 CellID->1571123038]
}, Open  ]],
Cell[37107, 997, 214, 5, 70, "Text",ExpressionUUID->"0ae34f58-c6fc-4418-b55b-3fe98b435e2f",
 CellID->1217158812]
}, Open  ]],
Cell[CellGroupData[{
Cell[37358, 1007, 308, 5, 70, "Section",ExpressionUUID->"d80d2401-d60a-4eb9-86e1-03a65e269b3f",
 CellTags->"SectionHeader",
 CellID->1127494243],
Cell[37669, 1014, 197, 5, 70, "Text",ExpressionUUID->"07ffc7a9-52a3-4b6d-85a6-7f687226ebed",
 CellID->1563734128],
Cell[37869, 1021, 140, 2, 70, "CodeText",ExpressionUUID->"5210a989-c558-4bdf-806a-67208e73c9da",
 CellID->1791965260],
Cell[CellGroupData[{
Cell[38034, 1027, 2641, 74, 70, "Input",ExpressionUUID->"819c2ffe-2886-4279-9038-0722f69093ad",
 CellID->400040973],
Cell[40678, 1103, 1883, 47, 70, "Output",ExpressionUUID->"31784627-279c-45f7-8727-b40606e14f11",
 CellID->428594821]
}, Open  ]],
Cell[42576, 1153, 259, 6, 70, "Text",ExpressionUUID->"c5c75b2f-9b81-4cf3-bd87-a110759440aa",
 CellID->1621479189],
Cell[42838, 1161, 212, 3, 70, "CodeText",ExpressionUUID->"78136324-183b-4563-8785-cdcb1898b673",
 CellID->834006490],
Cell[43053, 1166, 891, 21, 70, "Input",ExpressionUUID->"b0af3ff9-6971-4f26-9759-a1395537b2cc",
 CellID->633249093],
Cell[43947, 1189, 345, 7, 70, "CodeText",ExpressionUUID->"05e3d638-648a-44c0-83ac-251f0cb099af",
 CellID->88551519],
Cell[CellGroupData[{
Cell[44317, 1200, 1187, 32, 70, "Input",ExpressionUUID->"cd7dcc9b-c281-4875-815b-1abdcfa2fa73",
 CellID->79212462],
Cell[45507, 1234, 9117, 157, 70, "Output",ExpressionUUID->"dc142b02-5482-4eca-b546-d0fc283d3598",
 CellID->358514377]
}, Open  ]],
Cell[54639, 1394, 225, 5, 70, "CodeText",ExpressionUUID->"0d6b6607-149d-4182-85f6-32aca3e02306",
 CellID->96324534],
Cell[54867, 1401, 484, 15, 70, "Input",ExpressionUUID->"99d3f610-d48e-47fa-87af-60782e278bf2",
 CellID->1929906888],
Cell[55354, 1418, 227, 4, 70, "Text",ExpressionUUID->"c405245b-3e8f-4147-96a1-b19ec99168cd",
 CellID->1877318535],
Cell[55584, 1424, 587, 11, 70, "Input",ExpressionUUID->"a0bca8cb-3868-45f1-a526-b88eb847259b",
 CellID->1262876021],
Cell[56174, 1437, 234, 5, 70, "CodeText",ExpressionUUID->"96c853a8-8e9a-4f9d-80dd-0530981193e0",
 CellID->1076711283],
Cell[CellGroupData[{
Cell[56433, 1446, 659, 16, 70, "Input",ExpressionUUID->"a757dcbb-553d-481b-8f68-3afd49f0304a",
 CellID->1589323759],
Cell[57095, 1464, 971, 30, 70, "Output",ExpressionUUID->"fd6cba46-8f69-434f-8e13-762fd24b7a9d",
 CellID->1596635181]
}, Open  ]],
Cell[58081, 1497, 255, 4, 70, "CodeText",ExpressionUUID->"d1fb048b-71c2-498f-9ac3-af2eb5b44568",
 CellID->1937551234],
Cell[CellGroupData[{
Cell[58361, 1505, 1542, 39, 70, "Input",ExpressionUUID->"f06d9d83-2ae9-4f25-93f6-5470ee2929c4",
 CellID->2129050377],
Cell[59906, 1546, 2339, 65, 70, "Output",ExpressionUUID->"5843cced-e2a1-4d5c-90ce-c35d48f0a861",
 CellID->1302406019]
}, Open  ]],
Cell[62260, 1614, 209, 5, 70, "Text",ExpressionUUID->"7ea5d47c-7af9-4213-8072-e1d0052c1222",
 CellID->1953374609]
}, Open  ]],
Cell[CellGroupData[{
Cell[62506, 1624, 301, 5, 70, "Section",ExpressionUUID->"d6414686-f612-4c09-a318-e02c5a052aad",
 CellTags->"SectionHeader",
 CellID->1704509078],
Cell[62810, 1631, 345, 7, 70, "Text",ExpressionUUID->"2e8a011a-2ea8-47f9-8487-da0304ef5ab2",
 CellID->857426506],
Cell[63158, 1640, 144, 2, 70, "CodeText",ExpressionUUID->"26212175-f6be-48fd-b743-e880381404b2",
 CellID->1452903198],
Cell[CellGroupData[{
Cell[63327, 1646, 2664, 75, 70, "Input",ExpressionUUID->"b9f097d6-676e-4cef-bd9e-7f5b568103f3",
 CellID->252222966],
Cell[65994, 1723, 1856, 46, 70, "Output",ExpressionUUID->"b974dbfd-9e17-4fe1-9857-af23be4689ce",
 CellID->1858564158]
}, Open  ]],
Cell[67865, 1772, 176, 4, 70, "Text",ExpressionUUID->"5f872254-4db6-4df5-b712-7da3b47b99e2",
 CellID->1812517473],
Cell[68044, 1778, 239, 5, 70, "Text",ExpressionUUID->"3631e402-8861-46e2-80b8-c705c22f75f8",
 CellID->1352524921],
Cell[68286, 1785, 234, 3, 70, "CodeText",ExpressionUUID->"97fdbfda-ffac-4a5a-9d70-7836c6133560",
 CellID->142912937],
Cell[68523, 1790, 1012, 23, 70, "Input",ExpressionUUID->"8267068c-6ceb-474d-a402-e25e0dd55254",
 CellID->1051014813],
Cell[69538, 1815, 145, 3, 70, "CodeText",ExpressionUUID->"3ce4fb28-7cb9-4ddd-857f-134e78da46a4",
 CellID->1352965516],
Cell[CellGroupData[{
Cell[69708, 1822, 1228, 32, 70, "Input",ExpressionUUID->"7165c901-6aac-419f-96b1-74cf8b024d6b",
 CellID->1734572976],
Cell[70939, 1856, 8681, 149, 70, "Output",ExpressionUUID->"c1415f30-6861-4bb5-90c6-904e23aada46",
 CellID->1859504404]
}, Open  ]],
Cell[79635, 2008, 217, 3, 70, "CodeText",ExpressionUUID->"7823f5db-4e11-4aca-9dbe-516be9dea4fa",
 CellID->1365690900],
Cell[79855, 2013, 728, 19, 70, "Input",ExpressionUUID->"b53cbb5b-6621-4df4-bfbb-04face859ba5",
 CellID->861737164],
Cell[80586, 2034, 185, 3, 70, "CodeText",ExpressionUUID->"f17bb8c0-fa6a-4ba6-bf78-62c24146f4a6",
 CellID->2044273551],
Cell[CellGroupData[{
Cell[80796, 2041, 397, 8, 70, "Input",ExpressionUUID->"f48720f5-b3bd-47c5-8d03-671ee8820616",
 CellID->514703304],
Cell[81196, 2051, 58172, 1238, 70, "Output",ExpressionUUID->"b92c861d-ee84-40a0-9c70-e7dbae063ad6",
 CellID->900065220]
}, Open  ]],
Cell[139383, 3292, 154, 2, 70, "Text",ExpressionUUID->"e44caf11-99e4-4163-8881-04ba4457b230",
 CellID->27001147],
Cell[139540, 3296, 259, 4, 70, "Text",ExpressionUUID->"39a7c71b-5811-482d-a9cb-33e557196538",
 CellID->339602398],
Cell[CellGroupData[{
Cell[139824, 3304, 561, 14, 70, "Input",ExpressionUUID->"94d9e02d-fa7e-4b8a-a9d1-712728f41cd8",
 CellID->1833453107],
Cell[140388, 3320, 900, 29, 70, "Output",ExpressionUUID->"3f61013e-5ae7-460a-8cb6-fc3a713ca04f",
 CellID->1767084942]
}, Open  ]],
Cell[141303, 3352, 208, 3, 70, "Text",ExpressionUUID->"1cbc2d38-2943-4776-9ed1-a9becb714948",
 CellID->770937841],
Cell[CellGroupData[{
Cell[141536, 3359, 1636, 41, 70, "Input",ExpressionUUID->"c20c22e1-3f6f-46d9-9d30-7ec64c7b3d3a",
 CellID->1383451336],
Cell[143175, 3402, 2298, 64, 70, "Output",ExpressionUUID->"ea0207c9-fbb6-41c4-b562-01e6fea944a7",
 CellID->818350347]
}, Open  ]],
Cell[145488, 3469, 199, 5, 70, "Text",ExpressionUUID->"19652f29-a782-4edc-995f-1b3e9f121a3a",
 CellID->1571475290]
}, Open  ]],
Cell[CellGroupData[{
Cell[145724, 3479, 353, 6, 70, "Section",ExpressionUUID->"a43d1a12-24f9-44c4-a1ae-d560ffe54b64",
 CellTags->"SectionHeader",
 CellID->249898406],
Cell[146080, 3487, 289, 6, 70, "Text",ExpressionUUID->"b09093ed-ce8d-4928-8fb0-f8383bc544a7",
 CellID->987183498],
Cell[146372, 3495, 140, 2, 70, "CodeText",ExpressionUUID->"68f5b8f1-f10e-4227-8b52-dc86d496eb62",
 CellID->1743415537],
Cell[CellGroupData[{
Cell[146537, 3501, 2766, 76, 70, "Input",ExpressionUUID->"8d75a18e-535a-498f-8663-984b6a786b3c",
 CellID->1711979757],
Cell[149306, 3579, 1954, 48, 70, "Output",ExpressionUUID->"433baa7a-aff8-4b28-81f0-8d26f3ce1400",
 CellID->1662651311]
}, Open  ]],
Cell[151275, 3630, 259, 6, 70, "Text",ExpressionUUID->"e112278c-a15b-493e-8ce3-71168b0c6e97",
 CellID->1662261082],
Cell[151537, 3638, 157, 3, 70, "CodeText",ExpressionUUID->"e1756591-385a-46fa-af4f-0bde6128c596",
 CellID->1249095083],
Cell[151697, 3643, 635, 14, 70, "Input",ExpressionUUID->"7660d0d6-c678-4902-86ab-7e0be60705e6",
 CellID->1888410556],
Cell[152335, 3659, 172, 3, 70, "Text",ExpressionUUID->"a6147b8f-69db-4e0b-8798-8a3eee661dd2",
 CellID->855395679],
Cell[CellGroupData[{
Cell[152532, 3666, 1337, 34, 70, "Input",ExpressionUUID->"aa8e206e-1b0f-45b4-b754-8050ff30982e",
 CellID->1379643935],
Cell[153872, 3702, 5351, 94, 70, "Output",ExpressionUUID->"827f7597-daa2-42e8-a7ca-48a683dea246",
 CellID->361003237]
}, Open  ]],
Cell[159238, 3799, 265, 4, 70, "CodeText",ExpressionUUID->"fdcec93a-7663-43c5-84f2-73c5f7907a07",
 CellID->1363725598],
Cell[159506, 3805, 778, 19, 70, "Input",ExpressionUUID->"da8d63d1-627e-43e5-a963-d545d03098bc",
 CellID->43161155],
Cell[160287, 3826, 145, 2, 70, "CodeText",ExpressionUUID->"ef4bc376-848c-419d-ad09-edcbc6f1516b",
 CellID->904909301],
Cell[160435, 3830, 342, 10, 70, "Input",ExpressionUUID->"ec94b226-b36e-466b-81d0-ad066bd671f1",
 CellID->1141684488],
Cell[160780, 3842, 170, 3, 70, "CodeText",ExpressionUUID->"86272673-4169-46e1-8c1a-342b4a764628",
 CellID->635719409],
Cell[CellGroupData[{
Cell[160975, 3849, 564, 14, 70, "Input",ExpressionUUID->"e0f237ad-3d50-4c6b-b105-78fea16af7b1",
 CellID->577210595],
Cell[161542, 3865, 929, 30, 70, "Output",ExpressionUUID->"bce5ce38-e105-4865-b526-e65b1964e1ae",
 CellID->285284417]
}, Open  ]],
Cell[162486, 3898, 153, 2, 70, "CodeText",ExpressionUUID->"5b7089d2-1a8c-44aa-b5f3-7e5476f24a51",
 CellID->2001260150],
Cell[CellGroupData[{
Cell[162664, 3904, 1719, 41, 70, "Input",ExpressionUUID->"7702165a-7d0a-4ec1-9c60-0e73d94f4b2a",
 CellID->1308594576],
Cell[164386, 3947, 2352, 65, 70, "Output",ExpressionUUID->"755d1bfa-412a-4987-8483-7ee7e396adb5",
 CellID->1195141912]
}, Open  ]],
Cell[166753, 4015, 153, 2, 70, "CodeText",ExpressionUUID->"49758d93-2b76-4470-aa79-e15b363a5e18",
 CellID->427588850],
Cell[CellGroupData[{
Cell[166931, 4021, 3792, 99, 70, "Input",ExpressionUUID->"ff3111fd-8d97-4045-9fc1-df8e379a7797",
 CellID->1189757772],
Cell[170726, 4122, 12274, 208, 70, "Output",ExpressionUUID->"1f12adb9-d74e-4f68-957c-88374390fc0c",
 CellID->740101484]
}, Open  ]],
Cell[183015, 4333, 179, 3, 70, "CodeText",ExpressionUUID->"c7f5ea72-63c6-4719-871d-b67fb8ab7501",
 CellID->933550747],
Cell[183197, 4338, 303, 7, 70, "Input",ExpressionUUID->"21765e7f-54d6-4fd3-864a-595eff55ba51",
 CellID->1534322404],
Cell[183503, 4347, 251, 6, 70, "CodeText",ExpressionUUID->"70aab12b-b10b-4621-b72e-0b94c1dbb24d",
 CellID->2088103467],
Cell[CellGroupData[{
Cell[183779, 4357, 424, 12, 70, "Input",ExpressionUUID->"18f1d838-4892-48be-ae66-be5f45c6a2f3",
 CellID->1181550487],
Cell[184206, 4371, 710, 26, 70, "Output",ExpressionUUID->"570108a5-9878-4c7b-9793-f5bb6f6a21ef",
 CellID->857179874]
}, Open  ]],
Cell[184931, 4400, 279, 6, 70, "CodeText",ExpressionUUID->"21f56dc2-3c67-4728-9727-3e6620dd4823",
 CellID->2059653567],
Cell[CellGroupData[{
Cell[185235, 4410, 1159, 33, 70, "Input",ExpressionUUID->"4fcb6ada-857f-4d2d-94f2-3fafbf6ff17d",
 CellID->1335564593],
Cell[186397, 4445, 1974, 59, 70, "Output",ExpressionUUID->"9754f3e3-3d02-44d0-be64-7ece0d13a3d8",
 CellID->1427473141]
}, Open  ]],
Cell[188386, 4507, 306, 6, 70, "Text",ExpressionUUID->"ea1dc900-689a-4d8e-a500-4c533a854694",
 CellID->691332955]
}, Open  ]],
Cell[CellGroupData[{
Cell[188729, 4518, 406, 7, 70, "Section",ExpressionUUID->"da91ef4f-89cc-4261-8a3f-3954932859c9",
 CellTags->"SectionHeader",
 CellID->727205604],
Cell[189138, 4527, 206, 5, 70, "Text",ExpressionUUID->"45b79ebb-a375-4c9c-9da8-0fbbee357994",
 CellID->1389352049],
Cell[189347, 4534, 142, 2, 70, "CodeText",ExpressionUUID->"e603de01-94c0-4f2a-8fdf-2607cf87f892",
 CellID->943150004],
Cell[CellGroupData[{
Cell[189514, 4540, 2793, 78, 70, "Input",ExpressionUUID->"65651c2d-ec11-493a-a038-477a26491b3d",
 CellID->815151351],
Cell[192310, 4620, 1965, 48, 70, "Output",ExpressionUUID->"b9b9bcb7-e5f6-4b58-81bf-d2845614067b",
 CellID->437856226]
}, Open  ]],
Cell[194290, 4671, 207, 5, 70, "Text",ExpressionUUID->"6f66b4cc-6512-4c37-ab8b-3c79a4a7f11c",
 CellID->1221621610],
Cell[194500, 4678, 157, 3, 70, "CodeText",ExpressionUUID->"b08411ac-5e36-4167-b821-12de023a7c9a",
 CellID->1529982764],
Cell[194660, 4683, 873, 19, 70, "Input",ExpressionUUID->"f1a7bd14-3459-41a8-adb9-97cff54a9d13",
 CellID->451125370],
Cell[195536, 4704, 145, 3, 70, "CodeText",ExpressionUUID->"ebb4b308-9181-41ac-ae44-c550ea1012f5",
 CellID->1446819680],
Cell[CellGroupData[{
Cell[195706, 4711, 1388, 35, 70, "Input",ExpressionUUID->"a72a9183-a922-4c3d-bdb4-b41a4c5b803b",
 CellID->741026779],
Cell[197097, 4748, 6426, 112, 70, "Output",ExpressionUUID->"021fc591-259d-4f84-90b6-6ccdcca610d6",
 CellID->660358164]
}, Open  ]],
Cell[203538, 4863, 213, 3, 70, "CodeText",ExpressionUUID->"46982597-f626-4a45-b8ad-24f6de2848e0",
 CellID->997538090],
Cell[203754, 4868, 880, 21, 70, "Input",ExpressionUUID->"e8106d3c-c8c7-44bb-ae2b-57889cfbd71a",
 CellID->217846501],
Cell[204637, 4891, 223, 4, 70, "Text",ExpressionUUID->"40e2c3e2-614f-4770-8a69-098a5dc8adeb",
 CellID->2034007819],
Cell[CellGroupData[{
Cell[204885, 4899, 333, 9, 70, "Input",ExpressionUUID->"9dd87afa-2dae-4d87-a8a6-95f88b4a357f",
 CellID->1924720987],
Cell[205221, 4910, 1186, 29, 70, "Output",ExpressionUUID->"f9144822-125c-4f9d-a862-e6ddf4a981ff",
 CellID->1058181841]
}, Open  ]],
Cell[206422, 4942, 199, 3, 70, "CodeText",ExpressionUUID->"032a6130-67cb-4c86-8a6f-8d0854b31c2b",
 CellID->907766736],
Cell[CellGroupData[{
Cell[206646, 4949, 564, 13, 70, "Input",ExpressionUUID->"dc13249d-a1a6-47b2-ad3d-1eacb113176a",
 CellID->1111703664],
Cell[207213, 4964, 57376, 1211, 70, "Output",ExpressionUUID->"0b046b27-b434-4d68-9864-fdf2f648d9b7",
 CellID->241137857]
}, Open  ]],
Cell[264604, 6178, 234, 5, 70, "CodeText",ExpressionUUID->"c166efa3-3f7d-4ed9-8cb2-04954fc51a88",
 CellID->71325809],
Cell[CellGroupData[{
Cell[264863, 6187, 610, 15, 70, "Input",ExpressionUUID->"03e05674-44e7-45c4-93ea-a47eda6ede5b",
 CellID->476996837],
Cell[265476, 6204, 972, 30, 70, "Output",ExpressionUUID->"8422c59b-333c-43bd-9f05-1a33f86942a6",
 CellID->1757508403]
}, Open  ]],
Cell[266463, 6237, 205, 3, 70, "CodeText",ExpressionUUID->"f69a9584-0704-4280-bff4-612fcdf0fea3",
 CellID->1911832537],
Cell[CellGroupData[{
Cell[266693, 6244, 1764, 42, 70, "Input",ExpressionUUID->"ae9b6fa4-9d58-480b-9f40-a223c6a84587",
 CellID->1519122945],
Cell[268460, 6288, 2097, 62, 70, "Output",ExpressionUUID->"c4065c36-5681-4f2c-be03-ec6bcdb130e2",
 CellID->1010054154]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
